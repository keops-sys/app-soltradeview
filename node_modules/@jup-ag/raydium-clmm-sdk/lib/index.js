"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var ce=Object.defineProperty,le=Object.defineProperties;var de=Object.getOwnPropertyDescriptors;var J=Object.getOwnPropertySymbols;var pe=Object.prototype.hasOwnProperty,ye=Object.prototype.propertyIsEnumerable;var $=(y,e,t)=>e in y?ce(y,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):y[e]=t,ee=(y,e)=>{for(var t in e||(e={}))pe.call(e,t)&&$(y,t,e[t]);if(J)for(var t of J(e))ye.call(e,t)&&$(y,t,e[t]);return y},te=(y,e)=>le(y,de(e));var _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);var _decimaljs = require('decimal.js'); var _decimaljs2 = _interopRequireDefault(_decimaljs);var _web3js = require('@solana/web3.js');var w=new (0, _bnjs2.default)(0),M=new (0, _bnjs2.default)(1),h=new (0, _bnjs2.default)(-1),V=new (0, _bnjs2.default)(1).shln(64),D=new (0, _bnjs2.default)(1).shln(128),Q=V.sub(M),E=64,ne=D.subn(1),O=-307200,C=-O,v=new (0, _bnjs2.default)("3939943522091"),R=new (0, _bnjs2.default)("86367321006760116002434269"),Y=-307200,Z=306600,ie=14,ae="59543866431248",re="184467440737095516",se="15793534762490258745",G=new (0, _bnjs2.default)(10).pow(new (0, _bnjs2.default)(6));var Ie=new (0, _web3js.PublicKey)("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");function ke(y){let e=new ArrayBuffer(4);return new DataView(e).setInt32(0,y,!1),new Uint8Array(e)}var Se=Buffer.from("tick_array","utf8");function Ae(y,e){let[t,n]=_web3js.PublicKey.findProgramAddressSync(y,e);return{publicKey:t,nonce:n}}function N(y,e,t){let{publicKey:n,nonce:a}=Ae([Se,e.toBuffer(),ke(t)],y);return{publicKey:n,nonce:a}}var I=60,xe= exports.TICK_ARRAY_BITMAP_SIZE =1024,f= exports.TickUtils =class{static getTickArrayStartIndexByTick(e,t){let n=e/(I*t);return e<0&&e%(I*t)!=0?n=Math.ceil(n)-1:n=Math.floor(n),n*(t*I)}static getTickArrayOffsetInBitmapByTick(e,t){let n=t*I,a=Math.floor(e/n)+512;return Math.abs(a)}static checkTickArrayIsInitialized(e,t,n){let a=n*I,s=Math.floor(t/a)+512,i=Math.abs(s);return{isInitialized:e.testn(i),startIndex:(i-512)*a}}static getNextTickArrayStartIndex(e,t,n){return n?e-t*I:e+t*I}static mergeTickArrayBitmap(e){return e[0].add(e[1].shln(64)).add(e[2].shln(128)).add(e[3].shln(192)).add(e[4].shln(256)).add(e[5].shln(320)).add(e[6].shln(384)).add(e[7].shln(448)).add(e[8].shln(512)).add(e[9].shln(576)).add(e[10].shln(640)).add(e[11].shln(704)).add(e[12].shln(768)).add(e[13].shln(832)).add(e[14].shln(896)).add(e[15].shln(960))}static getInitializedTickArrayInRange(e,t,n,a){if(n%(t*I)!=0)throw new Error("Invild tickArrayStartIndex");let s=Math.floor(n/(t*I))+512;return[...f.searchLowBitFromStart(e,s-1,0,a,t),...f.searchHightBitFromStart(e,s,xe,a,t)]}static searchLowBitFromStart(e,t,n,a,s){let i=0,r=[];for(let u=t;u>=n;u--){if(e.shrn(u).and(new (0, _bnjs2.default)(1)).eqn(1)){let o=(u-512)*(s*I);r.push(o),i++}if(i>=a)break}return r}static searchHightBitFromStart(e,t,n,a,s){let i=0,r=[];for(let u=t;u<n;u++){if(e.shrn(u).and(new (0, _bnjs2.default)(1)).eqn(1)){let o=(u-512)*(s*I);r.push(o),i++}if(i>=a)break}return r}};var oe=15,q=class{static nextInitializedTick(e,t,n,a,s,i){let{initializedTick:r,tickArrayAddress:u,tickArrayStartTickIndex:o}=this.nextInitializedTickInOneArray(e,t,n,a,s,i);for(;r==null||r.liquidityGross.lten(0);){if(o=f.getNextTickArrayStartIndex(o,s,i),o<Y||o>Z)throw new Error("No enough initialized tickArray");let p=n[o];if(p===void 0)continue;let{nextTick:g,tickArrayAddress:d,tickArrayStartTickIndex:S}=this.firstInitializedTickInOneArray(e,t,p,i);[r,u,o]=[g,d,S]}if(r==null)throw new Error("No invaild tickArray cache");return{nextTick:r,tickArrayAddress:u,tickArrayStartTickIndex:o}}static nextInitializedTickArray(e,t,n,a,s,i){let{initializedTick:r,tickArrayAddress:u,tickArrayStartTickIndex:o}=this.nextInitializedTickInOneArray(e,t,n,a,s,i);do{if(o=f.getNextTickArrayStartIndex(o,s,i),o<Y||o>Z)throw new Error("No enough initialized tickArray");let p=n[o];if(p===void 0)return;let{nextTick:g,tickArrayAddress:d,tickArrayStartTickIndex:S}=this.firstInitializedTickInOneArray(e,t,p,i);[r,u,o]=[g,d,S]}while(r==null||r.liquidityGross.lten(0));if(r==null)throw new Error("No invaild tickArray cache");return{nextTick:r,tickArrayAddress:u,tickArrayStartTickIndex:o}}static firstInitializedTickInOneArray(e,t,n,a){let s;if(a){let r=I-1;for(;r>=0;){let u=n.ticks[r];if(u.liquidityGross.gtn(0)){s=u;break}r=r-1}}else{let r=0;for(;r<I;){let u=n.ticks[r];if(u.liquidityGross.gtn(0)){s=u;break}r=r+1}}let{publicKey:i}=N(e,t,n.startTickIndex);return{nextTick:s,tickArrayAddress:i,tickArrayStartTickIndex:n.startTickIndex}}static nextInitializedTickInOneArray(e,t,n,a,s,i){let r=f.getTickArrayStartIndexByTick(a,s),u=Math.floor((a-r)/s),o=n[r];if(o==null)return{initializedTick:void 0,tickArrayAddress:void 0,tickArrayStartTickIndex:r};let p;if(i)for(;u>=0;){let d=o.ticks[u];if(d.liquidityGross.gtn(0)){p=d;break}u=u-1}else for(u=u+1;u<I;){let d=o.ticks[u];if(d.liquidityGross.gtn(0)){p=d;break}u=u+1}let{publicKey:g}=N(e,t,r);return{initializedTick:p,tickArrayAddress:g,tickArrayStartTickIndex:o.startTickIndex}}};var x=class{static mulDivRoundingUp(e,t,n){let a=e.mul(t),s=a.div(n);return a.mod(n).eq(w)||(s=s.add(M)),s}static mulDivFloor(e,t,n){if(n.eq(w))throw new Error("division by 0");return e.mul(t).div(n)}static mulDivCeil(e,t,n){if(n.eq(w))throw new Error("division by 0");return e.mul(t).add(n.sub(M)).div(n)}static x64ToDecimal(e,t){return new (0, _decimaljs2.default)(e.toString()).div(_decimaljs2.default.pow(2,64)).toDecimalPlaces(t)}static decimalToX64(e){return new (0, _bnjs2.default)(e.mul(_decimaljs2.default.pow(2,64)).floor().toFixed())}static wrappingSubU128(e,t){return e.add(D).sub(t).mod(D)}};function A(y,e){return H(y.mul(e),64,256)}function be(y,e,t){let n=y.toTwos(t).shln(e);return n.imaskn(t+1),n.fromTwos(t)}function H(y,e,t){let n=y.toTwos(t).shrn(e);return n.imaskn(t-e+1),n.fromTwos(t-e)}var T=class{static sqrtPriceX64ToPrice(e,t,n){return x.x64ToDecimal(e).pow(2).mul(_decimaljs2.default.pow(10,t-n))}static priceToSqrtPriceX64(e,t,n){return x.decimalToX64(e.mul(_decimaljs2.default.pow(10,n-t)).sqrt())}static getNextSqrtPriceX64FromInput(e,t,n,a){if(!e.gt(w))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(w))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!0):this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!0)}static getNextSqrtPriceX64FromOutput(e,t,n,a){if(!e.gt(w))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(w))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!1):this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!1)}static getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,a){if(n.eq(w))return e;let s=t.shln(E);if(a){let i=s,r=s.add(n.mul(e));return r.gte(i)?x.mulDivCeil(i,e,r):x.mulDivRoundingUp(i,M,i.div(e).add(n))}else{let i=n.mul(e);if(!s.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountARoundingUp,liquidityLeftShift must gt amountMulSqrtPrice");let r=s.sub(i);return x.mulDivCeil(s,e,r)}}static getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,a){let s=n.shln(E);if(a)return e.add(s.div(t));{let i=x.mulDivRoundingUp(s,M,t);if(!e.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountBRoundingDown sqrtPriceX64 must gt amountDivLiquidity");return e.sub(i)}}static getSqrtPriceX64FromTick(e){if(!Number.isInteger(e))throw new Error("tick must be integer");if(e<O||e>C)throw new Error("tick must be in MIN_TICK and MAX_TICK");let t=e<0?e*-1:e,n=(t&1)!=0?new (0, _bnjs2.default)("18445821805675395072"):new (0, _bnjs2.default)("18446744073709551616");return(t&2)!=0&&(n=A(n,new (0, _bnjs2.default)("18444899583751176192"))),(t&4)!=0&&(n=A(n,new (0, _bnjs2.default)("18443055278223355904"))),(t&8)!=0&&(n=A(n,new (0, _bnjs2.default)("18439367220385607680"))),(t&16)!=0&&(n=A(n,new (0, _bnjs2.default)("18431993317065453568"))),(t&32)!=0&&(n=A(n,new (0, _bnjs2.default)("18417254355718170624"))),(t&64)!=0&&(n=A(n,new (0, _bnjs2.default)("18387811781193609216"))),(t&128)!=0&&(n=A(n,new (0, _bnjs2.default)("18329067761203558400"))),(t&256)!=0&&(n=A(n,new (0, _bnjs2.default)("18212142134806163456"))),(t&512)!=0&&(n=A(n,new (0, _bnjs2.default)("17980523815641700352"))),(t&1024)!=0&&(n=A(n,new (0, _bnjs2.default)("17526086738831433728"))),(t&2048)!=0&&(n=A(n,new (0, _bnjs2.default)("16651378430235570176"))),(t&4096)!=0&&(n=A(n,new (0, _bnjs2.default)("15030750278694412288"))),(t&8192)!=0&&(n=A(n,new (0, _bnjs2.default)("12247334978884435968"))),(t&16384)!=0&&(n=A(n,new (0, _bnjs2.default)("8131365268886854656"))),(t&32768)!=0&&(n=A(n,new (0, _bnjs2.default)("3584323654725218816"))),(t&65536)!=0&&(n=A(n,new (0, _bnjs2.default)("696457651848324352"))),(t&131072)!=0&&(n=A(n,new (0, _bnjs2.default)("26294789957507116"))),(t&262144)!=0&&(n=A(n,new (0, _bnjs2.default)("37481735321082"))),e>0&&(n=ne.div(n)),n}static getTickFromPrice(e,t,n){return T.getTickFromSqrtPriceX64(T.priceToSqrtPriceX64(e,t,n))}static getTickFromSqrtPriceX64(e){if(e.gt(R)||e.lt(v))throw new Error("Provided sqrtPrice is not within the supported sqrtPrice range.");let t=e.bitLength()-1,n=new (0, _bnjs2.default)(t-64),a=be(n,32,128),s=new (0, _bnjs2.default)("8000000000000000","hex"),i=0,r=new (0, _bnjs2.default)(0),u=t>=64?e.shrn(t-63):e.shln(63-t);for(;s.gt(new (0, _bnjs2.default)(0))&&i<ie;){u=u.mul(u);let m=u.shrn(127);u=u.shrn(63+m.toNumber()),r=r.add(s.mul(m)),s=s.shrn(1),i+=1}let o=r.shrn(32),g=a.add(o).mul(new (0, _bnjs2.default)(ae)),d=H(g.sub(new (0, _bnjs2.default)(re)),64,128).toNumber(),S=H(g.add(new (0, _bnjs2.default)(se)),64,128).toNumber();return d==S?d:T.getSqrtPriceX64FromTick(S).lte(e)?S:d}};var k=class{static addDelta(e,t){return e.add(t)}static getTokenAmountAFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(w))throw new Error("sqrtPriceX64A must greater than 0");let s=n.ushln(E),i=t.sub(e);return a?x.mulDivRoundingUp(x.mulDivCeil(s,i,t),M,e):x.mulDivFloor(s,i,t).div(e)}static getTokenAmountBFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(w))throw new Error("sqrtPriceX64A must greater than 0");return a?x.mulDivCeil(n,t.sub(e),V):x.mulDivFloor(n,t.sub(e),V)}static getLiquidityFromTokenAmountA(e,t,n,a){e.gt(t)&&([e,t]=[t,e]);let s=n.mul(e).mul(t),i=t.sub(e),r=s.div(i);return a?x.mulDivRoundingUp(r,M,Q):r.shrn(E)}static getLiquidityFromTokenAmountB(e,t,n){return e.gt(t)&&([e,t]=[t,e]),x.mulDivFloor(n,Q,t.sub(e))}static getLiquidityFromTokenAmounts(e,t,n,a,s){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return k.getLiquidityFromTokenAmountA(t,n,a,!1);if(e.lt(n)){let i=k.getLiquidityFromTokenAmountA(e,n,a,!1),r=k.getLiquidityFromTokenAmountB(t,e,s);return i.lt(r)?i:r}else return k.getLiquidityFromTokenAmountB(t,n,s)}static getAmountsFromLiquidity(e,t,n,a,s){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return{amountA:k.getTokenAmountAFromLiquidity(t,n,a,s),amountB:new (0, _bnjs2.default)(0)};if(e.lt(n)){let i=k.getTokenAmountAFromLiquidity(e,n,a,s),r=k.getTokenAmountBFromLiquidity(t,e,a,s);return{amountA:i,amountB:r}}else return{amountA:new (0, _bnjs2.default)(0),amountB:k.getTokenAmountBFromLiquidity(t,n,a,s)}}static getAmountsFromLiquidityWithSlippage(e,t,n,a,s,i,r){let{amountA:u,amountB:o}=k.getAmountsFromLiquidity(e,t,n,a,i),p=s?1+r:1-r,g=u.muln(p),d=o.muln(p);return{amountSlippageA:g,amountSlippageB:d}}},K=class{static swapCompute(e,t,n,a,s,i,r,u,o,p,g,d){if(p.eq(w))throw new Error("amountSpecified must not be 0");if(d||(d=a?v.add(M):R.sub(M)),a){if(d.lt(v))throw new Error("sqrtPriceX64 must greater than MIN_SQRT_PRICE_X64");if(d.gte(o))throw new Error("sqrtPriceX64 must smaller than current")}else{if(d.gt(R))throw new Error("sqrtPriceX64 must smaller than MAX_SQRT_PRICE_X64");if(d.lte(o))throw new Error("sqrtPriceX64 must greater than current")}let S=p.gt(w),m={amountSpecifiedRemaining:p,amountCalculated:w,sqrtPriceX64:o,tick:r,accounts:[],liquidity:i,feeAmount:new (0, _bnjs2.default)(0)},b=0;for(;!m.amountSpecifiedRemaining.eq(w)&&m.sqrtPriceX64!=d&&m.tick<C&&m.tick>O;){if(b>10)throw Error("liquidity limit");let c={};c.sqrtPriceStartX64=m.sqrtPriceX64;let{nextTick:F,tickArrayAddress:W,tickArrayStartTickIndex:j}=q.nextInitializedTick(e,t,n,m.tick,u,a);c.tickNext=F.tick,c.initialized=F.liquidityGross.gtn(0),g!==j&&W&&(m.accounts.push(W),g=j),c.tickNext<O?c.tickNext=O:c.tickNext>C&&(c.tickNext=C),c.sqrtPriceNextX64=T.getSqrtPriceX64FromTick(c.tickNext);let X;if(a&&c.sqrtPriceNextX64.lt(d)||!a&&c.sqrtPriceNextX64.gt(d)?X=d:X=c.sqrtPriceNextX64,[m.sqrtPriceX64,c.amountIn,c.amountOut,c.feeAmount]=K.swapStepCompute(m.sqrtPriceX64,X,m.liquidity,m.amountSpecifiedRemaining,s),m.feeAmount=m.feeAmount.add(c.feeAmount),S?(m.amountSpecifiedRemaining=m.amountSpecifiedRemaining.sub(c.amountIn.add(c.feeAmount)),m.amountCalculated=m.amountCalculated.sub(c.amountOut)):(m.amountSpecifiedRemaining=m.amountSpecifiedRemaining.add(c.amountOut),m.amountCalculated=m.amountCalculated.add(c.amountIn.add(c.feeAmount))),m.sqrtPriceX64.eq(c.sqrtPriceNextX64)){if(c.initialized){let z=F.liquidityNet;a&&(z=z.mul(h)),m.liquidity=k.addDelta(m.liquidity,z)}m.tick=a?c.tickNext-1:c.tickNext}else m.sqrtPriceX64!=c.sqrtPriceStartX64&&(m.tick=T.getTickFromSqrtPriceX64(m.sqrtPriceX64));++b}try{let{tickArrayAddress:c,tickArrayStartTickIndex:F}=q.nextInitializedTickArray(e,t,n,m.tick,u,a);g!==F&&c&&(m.accounts.push(c),g=F)}catch(c){}return{amountCalculated:m.amountCalculated,feeAmount:m.feeAmount,sqrtPriceX64:m.sqrtPriceX64,liquidity:m.liquidity,tickCurrent:m.tick,accounts:m.accounts}}static swapStepCompute(e,t,n,a,s){let i={sqrtPriceX64Next:new (0, _bnjs2.default)(0),amountIn:new (0, _bnjs2.default)(0),amountOut:new (0, _bnjs2.default)(0),feeAmount:new (0, _bnjs2.default)(0)},r=e.gte(t),u=a.gte(w);if(u){let p=x.mulDivFloor(a,G.sub(new (0, _bnjs2.default)(s.toString())),G);i.amountIn=r?k.getTokenAmountAFromLiquidity(t,e,n,!0):k.getTokenAmountBFromLiquidity(e,t,n,!0),p.gte(i.amountIn)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=T.getNextSqrtPriceX64FromInput(e,n,p,r)}else i.amountOut=r?k.getTokenAmountBFromLiquidity(t,e,n,!1):k.getTokenAmountAFromLiquidity(e,t,n,!1),a.mul(h).gte(i.amountOut)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=T.getNextSqrtPriceX64FromOutput(e,n,a.mul(h),r);let o=t.eq(i.sqrtPriceX64Next);return r?(o&&u||(i.amountIn=k.getTokenAmountAFromLiquidity(i.sqrtPriceX64Next,e,n,!0)),o&&!u||(i.amountOut=k.getTokenAmountBFromLiquidity(i.sqrtPriceX64Next,e,n,!1))):(i.amountIn=o&&u?i.amountIn:k.getTokenAmountBFromLiquidity(e,i.sqrtPriceX64Next,n,!0),i.amountOut=o&&!u?i.amountOut:k.getTokenAmountAFromLiquidity(e,i.sqrtPriceX64Next,n,!1)),!u&&i.amountOut.gt(a.mul(h))&&(i.amountOut=a.mul(h)),u&&!i.sqrtPriceX64Next.eq(t)?i.feeAmount=a.sub(i.amountIn):i.feeAmount=x.mulDivCeil(i.amountIn,new (0, _bnjs2.default)(s),G.sub(new (0, _bnjs2.default)(s))),[i.sqrtPriceX64Next,i.amountIn,i.amountOut,i.feeAmount]}};var L=class{static getOutputAmountAndRemainAccounts(e,t,n,a,s){let i=n.equals(e.mintA.mint),r=[],{isExist:u,startIndex:o,nextAccountMeta:p}=this.getFirstInitializedTickArray(e,i);if(!u||o===void 0||!p)throw new Error("Invalid tick array");try{let b=this.preInitializedTickArrayStartIndex(e,!i);if(b.isExist){let{publicKey:c}=N(e.programId,e.id,b.nextStartIndex);r.push(c)}}catch(b){}r.push(p);let{amountCalculated:g,accounts:d,sqrtPriceX64:S,feeAmount:m}=K.swapCompute(e.programId,e.id,t,i,e.ammConfig.tradeFeeRate,e.liquidity,e.tickCurrent,e.tickSpacing,e.sqrtPriceX64,a,o,s);return r.push(...d),{expectedAmountOut:g.mul(h),remainingAccounts:r,executionPrice:S,feeAmount:m}}static getInputAmountAndRemainAccounts(e,t,n,a,s){let i=n.equals(e.mintB.mint),r=[],{isExist:u,startIndex:o,nextAccountMeta:p}=this.getFirstInitializedTickArray(e,i);if(!u||o===void 0||!p)throw new Error("Invalid tick array");try{let b=this.preInitializedTickArrayStartIndex(e,!i);if(b.isExist){let{publicKey:c}=N(e.programId,e.id,b.nextStartIndex);r.push(c)}}catch(b){}r.push(p);let{amountCalculated:g,accounts:d,sqrtPriceX64:S,feeAmount:m}=K.swapCompute(e.programId,e.id,t,i,e.ammConfig.tradeFeeRate,e.liquidity,e.tickCurrent,e.tickSpacing,e.sqrtPriceX64,a.mul(h),o,s);return r.push(...d),{expectedAmountIn:g,remainingAccounts:r,executionPrice:S,feeAmount:m}}static getFirstInitializedTickArray(e,t){let n=f.mergeTickArrayBitmap(e.tickArrayBitmap),{isInitialized:a,startIndex:s}=f.checkTickArrayIsInitialized(n,e.tickCurrent,e.tickSpacing);if(a){let{publicKey:u}=N(e.programId,e.id,s);return{isExist:!0,startIndex:s,nextAccountMeta:u}}let{isExist:i,nextStartIndex:r}=this.nextInitializedTickArrayStartIndex(e,t);if(i){let{publicKey:u}=N(e.programId,e.id,r);return{isExist:!0,startIndex:r,nextAccountMeta:u}}return{isExist:!1,nextAccountMeta:void 0,startIndex:void 0}}static nextInitializedTickArrayStartIndex(e,t){let n=f.mergeTickArrayBitmap(e.tickArrayBitmap),a=f.getTickArrayOffsetInBitmapByTick(e.tickCurrent,e.tickSpacing),s=t?f.searchLowBitFromStart(n,a-1,0,1,e.tickSpacing):f.searchHightBitFromStart(n,a,1024,1,e.tickSpacing);return s.length>0?{isExist:!0,nextStartIndex:s[0]}:{isExist:!1,nextStartIndex:0}}static preInitializedTickArrayStartIndex(e,t){let n=f.mergeTickArrayBitmap(e.tickArrayBitmap),a=f.getTickArrayOffsetInBitmapByTick(e.tickCurrent,e.tickSpacing),s=t?f.searchLowBitFromStart(n,a-1,0,1,e.tickSpacing):f.searchHightBitFromStart(n,a+1,1024,1,e.tickSpacing);return s.length>0?{isExist:!0,nextStartIndex:s[0]}:{isExist:!1,nextStartIndex:0}}};var me=class{static computeAmountOut({poolInfo:e,tickArrayCache:t,baseMint:n,amountIn:a,slippage:s,priceLimit:i=new (0, _decimaljs2.default)(0)}){let r;i.equals(new (0, _decimaljs2.default)(0))?r=n.equals(e.mintA.mint)?v.add(M):R.sub(M):r=T.priceToSqrtPriceX64(i,e.mintA.decimals,e.mintB.decimals);let{expectedAmountOut:u,remainingAccounts:o,executionPrice:p,feeAmount:g}=L.getOutputAmountAndRemainAccounts(e,t,n,a,r),d=T.sqrtPriceX64ToPrice(p,e.mintA.decimals,e.mintB.decimals),S=n.equals(e.mintA.mint)?d:new (0, _decimaljs2.default)(1).div(d),m=u.mul(new (0, _bnjs2.default)(Math.floor((1-s)*1e10))).div(new (0, _bnjs2.default)(1e10)),b=e.mintA.mint.equals(n)?e.currentPrice:new (0, _decimaljs2.default)(1).div(e.currentPrice),c=Math.abs(parseFloat(S.toFixed())-parseFloat(b.toFixed()))/parseFloat(b.toFixed());return{amountOut:u,minAmountOut:m,currentPrice:e.currentPrice,executionPrice:S,priceImpact:c,fee:g,remainingAccounts:o}}static computeAmountIn({poolInfo:e,tickArrayCache:t,baseMint:n,amountOut:a,slippage:s,priceLimit:i=new (0, _decimaljs2.default)(0)}){let r;i.equals(new (0, _decimaljs2.default)(0))?r=n.equals(e.mintB.mint)?v.add(M):R.sub(M):r=T.priceToSqrtPriceX64(i,e.mintA.decimals,e.mintB.decimals);let{expectedAmountIn:u,remainingAccounts:o,executionPrice:p,feeAmount:g}=L.getInputAmountAndRemainAccounts(e,t,n,a,r),d=T.sqrtPriceX64ToPrice(p,e.mintA.decimals,e.mintB.decimals),S=n.equals(e.mintA.mint)?d:new (0, _decimaljs2.default)(1).div(d),m=u.mul(new (0, _bnjs2.default)(Math.floor((1+s)*1e10))).div(new (0, _bnjs2.default)(1e10)),b=e.mintA.mint.equals(n)?e.currentPrice:new (0, _decimaljs2.default)(1).div(e.currentPrice),c=Math.abs(parseFloat(S.toFixed())-parseFloat(b.toFixed()))/parseFloat(b.toFixed());return{amountIn:u,maxAmountIn:m,currentPrice:e.currentPrice,executionPrice:S,priceImpact:c,fee:g,remainingAccounts:o}}static getTickArrayPks(e,t,n){let a=f.mergeTickArrayBitmap(t.tickArrayBitmap),s=f.getTickArrayStartIndexByTick(t.tickCurrent,t.tickSpacing),i=[],r=f.getInitializedTickArrayInRange(a,t.tickSpacing,s,Math.floor(oe/2));for(let u of r){let{publicKey:o}=N(n,e,u);i.push(o)}return i}static formatPoolInfo({address:e,poolState:t,ammConfig:n,programId:a}){return{id:e,mintA:{mint:t.tokenMint0,vault:t.tokenVault0,decimals:t.mintDecimals0},mintB:{mint:t.tokenMint1,vault:t.tokenVault1,decimals:t.mintDecimals1},observationId:t.observationKey,ammConfig:te(ee({},n),{id:t.ammConfig}),programId:a,tickSpacing:t.tickSpacing,liquidity:t.liquidity,sqrtPriceX64:t.sqrtPriceX64,currentPrice:T.sqrtPriceX64ToPrice(t.sqrtPriceX64,t.mintDecimals0,t.mintDecimals1),tickCurrent:t.tickCurrent,observationIndex:t.observationIndex,observationUpdateDuration:t.observationUpdateDuration,tickArrayBitmap:t.tickArrayBitmap}}};var rt={version:"0.1.0",name:"amm_v3",instructions:[{name:"createAmmConfig",accounts:[{name:"owner",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"index",type:"u16"},{name:"tickSpacing",type:"u16"},{name:"tradeFeeRate",type:"u32"},{name:"protocolFeeRate",type:"u32"},{name:"fundFeeRate",type:"u32"}]},{name:"updateAmmConfig",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1}],args:[{name:"param",type:"u8"},{name:"value",type:"u32"}]},{name:"createPool",accounts:[{name:"poolCreator",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenMint0",isMut:!1,isSigner:!1},{name:"tokenMint1",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"resetSqrtPrice",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"initializeReward",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenMint",isMut:!1,isSigner:!1},{name:"rewardTokenVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"param",type:{defined:"InitializeRewardParam"}}]},{name:"collectRemainingRewards",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenVault",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"updateRewardInfos",accounts:[{name:"poolState",isMut:!0,isSigner:!1}],args:[]},{name:"setRewardParams",accounts:[{name:"authority",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"},{name:"emissionsPerSecondX64",type:"u128"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"}]},{name:"collectProtocolFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"collectFundFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"openPosition",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"positionNftOwner",isMut:!1,isSigner:!1},{name:"positionNftMint",isMut:!0,isSigner:!0},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"metadataAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"metadataProgram",isMut:!1,isSigner:!1}],args:[{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"tickArrayLowerStartIndex",type:"i32"},{name:"tickArrayUpperStartIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"closePosition",accounts:[{name:"nftOwner",isMut:!0,isSigner:!0},{name:"positionNftMint",isMut:!0,isSigner:!1},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"increaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"decreaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Min",type:"u64"},{name:"amount1Min",type:"u64"}]},{name:"swap",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimitX64",type:"u128"},{name:"isBaseInput",type:"bool"}]},{name:"swapRouterBaseIn",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amountIn",type:"u64"},{name:"amountOutMinimum",type:"u64"}]}],accounts:[{name:"ammConfig",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"index",type:"u16"},{name:"owner",type:"publicKey"},{name:"protocolFeeRate",type:"u32"},{name:"tradeFeeRate",type:"u32"},{name:"tickSpacing",type:"u16"},{name:"fundFeeRate",type:"u32"},{name:"paddingU32",type:"u32"},{name:"fundOwner",type:"publicKey"},{name:"padding",type:{array:["u64",3]}}]}},{name:"observationState",type:{kind:"struct",fields:[{name:"initialized",type:"bool"},{name:"poolId",type:"publicKey"},{name:"observations",type:{array:[{defined:"Observation"},1e3]}},{name:"padding",type:{array:["u128",5]}}]}},{name:"personalPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"nftMint",type:"publicKey"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardInfos",type:{array:[{defined:"PositionRewardInfo"},3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"poolState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"ammConfig",type:"publicKey"},{name:"owner",type:"publicKey"},{name:"tokenMint0",type:"publicKey"},{name:"tokenMint1",type:"publicKey"},{name:"tokenVault0",type:"publicKey"},{name:"tokenVault1",type:"publicKey"},{name:"observationKey",type:"publicKey"},{name:"mintDecimals0",type:"u8"},{name:"mintDecimals1",type:"u8"},{name:"tickSpacing",type:"u16"},{name:"liquidity",type:"u128"},{name:"sqrtPriceX64",type:"u128"},{name:"tickCurrent",type:"i32"},{name:"observationIndex",type:"u16"},{name:"observationUpdateDuration",type:"u16"},{name:"feeGrowthGlobal0X64",type:"u128"},{name:"feeGrowthGlobal1X64",type:"u128"},{name:"protocolFeesToken0",type:"u64"},{name:"protocolFeesToken1",type:"u64"},{name:"swapInAmountToken0",type:"u128"},{name:"swapOutAmountToken1",type:"u128"},{name:"swapInAmountToken1",type:"u128"},{name:"swapOutAmountToken0",type:"u128"},{name:"status",type:"u8"},{name:"padding",type:{array:["u8",7]}},{name:"rewardInfos",type:{array:[{defined:"RewardInfo"},3]}},{name:"tickArrayBitmap",type:{array:["u64",16]}},{name:"totalFeesToken0",type:"u64"},{name:"totalFeesClaimedToken0",type:"u64"},{name:"totalFeesToken1",type:"u64"},{name:"totalFeesClaimedToken1",type:"u64"},{name:"fundFeesToken0",type:"u64"},{name:"fundFeesToken1",type:"u64"},{name:"padding1",type:{array:["u64",26]}},{name:"padding2",type:{array:["u64",32]}}]}},{name:"protocolPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardGrowthInside",type:{array:["u128",3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"tickArrayState",type:{kind:"struct",fields:[{name:"poolId",type:"publicKey"},{name:"startTickIndex",type:"i32"},{name:"ticks",type:{array:[{defined:"TickState"},60]}},{name:"initializedTickCount",type:"u8"},{name:"padding",type:{array:["u8",115]}}]}}],types:[{name:"InitializeRewardParam",type:{kind:"struct",fields:[{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"}]}},{name:"Observation",type:{kind:"struct",fields:[{name:"blockTimestamp",type:"u32"},{name:"sqrtPriceX64",type:"u128"},{name:"cumulativeTimePriceX64",type:"u128"},{name:"padding",type:"u128"}]}},{name:"PositionRewardInfo",type:{kind:"struct",fields:[{name:"growthInsideLastX64",type:"u128"},{name:"rewardAmountOwed",type:"u64"}]}},{name:"RewardInfo",type:{kind:"struct",fields:[{name:"rewardState",type:"u8"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"lastUpdateTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"},{name:"rewardTotalEmissioned",type:"u64"},{name:"rewardClaimed",type:"u64"},{name:"tokenMint",type:"publicKey"},{name:"tokenVault",type:"publicKey"},{name:"authority",type:"publicKey"},{name:"rewardGrowthGlobalX64",type:"u128"}]}},{name:"TickState",type:{kind:"struct",fields:[{name:"tick",type:"i32"},{name:"liquidityNet",type:"i128"},{name:"liquidityGross",type:"u128"},{name:"feeGrowthOutside0X64",type:"u128"},{name:"feeGrowthOutside1X64",type:"u128"},{name:"rewardGrowthsOutsideX64",type:{array:["u128",3]}},{name:"padding",type:{array:["u32",13]}}]}},{name:"PoolStatusBitIndex",type:{kind:"enum",variants:[{name:"OpenPositionOrIncreaseLiquidity"},{name:"DecreaseLiquidity"},{name:"CollectFee"},{name:"CollectReward"},{name:"Swap"}]}},{name:"PoolStatusBitFlag",type:{kind:"enum",variants:[{name:"Enable"},{name:"Disable"}]}},{name:"RewardState",type:{kind:"enum",variants:[{name:"Uninitialized"},{name:"Initialized"},{name:"Opening"},{name:"Ended"}]}}],events:[{name:"CreateConfigEvent",fields:[{name:"index",type:"u16",index:!1},{name:"owner",type:"publicKey",index:!0},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"UpdaterConfigEvent",fields:[{name:"owner",type:"publicKey",index:!1},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"CreatePersonalPositionEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"minter",type:"publicKey",index:!1},{name:"nftOwner",type:"publicKey",index:!1},{name:"tickLowerIndex",type:"i32",index:!1},{name:"tickUpperIndex",type:"i32",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"depositAmount0",type:"u64",index:!1},{name:"depositAmount1",type:"u64",index:!1}]},{name:"IncreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"DecreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"decreaseAmount0",type:"u64",index:!1},{name:"decreaseAmount1",type:"u64",index:!1},{name:"feeAmount0",type:"u64",index:!1},{name:"feeAmount1",type:"u64",index:!1},{name:"rewardAmounts",type:{array:["u64",3]},index:!1}]},{name:"CollectPersonalFeeEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"UpdateRewardInfosEvent",fields:[{name:"rewardGrowthGlobalX64",type:{array:["u128",3]},index:!1}]},{name:"PoolCreatedEvent",fields:[{name:"tokenMint0",type:"publicKey",index:!1},{name:"tokenMint1",type:"publicKey",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"poolState",type:"publicKey",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"tick",type:"i32",index:!1},{name:"tokenVault0",type:"publicKey",index:!1},{name:"tokenVault1",type:"publicKey",index:!1}]},{name:"CollectProtocolFeeEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"SwapEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"sender",type:"publicKey",index:!1},{name:"tokenAccount0",type:"publicKey",index:!1},{name:"tokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1},{name:"zeroForOne",type:"bool",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"tick",type:"i32",index:!1}]}],errors:[{code:6e3,name:"LOK",msg:"LOK"},{code:6001,name:"NotApproved",msg:"Not approved"},{code:6002,name:"InvalidUpdateConfigFlag",msg:"invalid update amm config flag"},{code:6003,name:"AccountLack",msg:"Account lack"},{code:6004,name:"ClosePositionErr",msg:"Remove liquitity, collect fees owed and reward then you can close position account"},{code:6005,name:"ZeroMintAmount",msg:"Minting amount should be greater than 0"},{code:6006,name:"InvaildTickIndex",msg:"Tick index of lower must be smaller than upper"},{code:6007,name:"TickInvaildOrder",msg:"The lower tick must be below the upper tick"},{code:6008,name:"TickLowerOverflow",msg:"The tick must be greater, or equal to the minimum tick(-221818)"},{code:6009,name:"TickUpperOverflow",msg:"The tick must be lesser than, or equal to the maximum tick(221818)"},{code:6010,name:"TickAndSpacingNotMatch",msg:"tick % tick_spacing must be zero"},{code:6011,name:"InvalidTickArray",msg:"Invaild tick array account"},{code:6012,name:"SqrtPriceLimitOverflow",msg:"Square root price limit overflow"},{code:6013,name:"SqrtPriceX64",msg:"sqrt_price_x64 out of range"},{code:6014,name:"LiquiditySubValueErr",msg:"Liquidity sub delta L must be smaller than before"},{code:6015,name:"LiquidityAddValueErr",msg:"Liquidity add delta L must be greater, or equal to before"},{code:6016,name:"InvaildLiquidity",msg:"Invaild liquidity when update position"},{code:6017,name:"ForbidBothZeroForSupplyLiquidity",msg:"Both token amount must not be zero while supply liquidity"},{code:6018,name:"TransactionTooOld",msg:"Transaction too old"},{code:6019,name:"PriceSlippageCheck",msg:"Price slippage check"},{code:6020,name:"TooLittleOutputReceived",msg:"Too little output received"},{code:6021,name:"TooMuchInputPaid",msg:"Too much input paid"},{code:6022,name:"InvaildSwapAmountSpecified",msg:"Swap special amount can not be zero"},{code:6023,name:"InvalidInputPoolVault",msg:"Input pool vault is invalid"},{code:6024,name:"TooSmallInputOrOutputAmount",msg:"Swap input or output amount is too small"},{code:6025,name:"InvalidRewardIndex",msg:"Invalid reward index"},{code:6026,name:"FullRewardInfo",msg:"The init reward token reach to the max"},{code:6027,name:"RewardTokenAlreadyInUse",msg:"The init reward token already in use"},{code:6028,name:"ExceptPoolVaultMint",msg:"The reward tokens must contain one of pool vault mint except the last reward"},{code:6029,name:"InvalidRewardInitParam",msg:"Invalid reward init param"},{code:6030,name:"InvalidRewardDesiredAmount",msg:"Invalid collect reward desired amount"},{code:6031,name:"InvalidRewardInputAccountNumber",msg:"Invalid collect reward input account number"},{code:6032,name:"InvalidRewardPeriod",msg:"Invalid reward period"},{code:6033,name:"NotApproveUpdateRewardEmissiones",msg:"Modification of emissiones is allowed within 72 hours from the end of the previous cycle"},{code:6034,name:"UnInitializedRewardInfo",msg:"uninitialized reward info"}]};exports.Amm = me; exports.IDL = rt; exports.TICK_ARRAY_BITMAP_SIZE = xe; exports.TICK_ARRAY_SIZE = I; exports.TickUtils = f; exports.getPdaTickArrayAddress = N;
