{"version":3,"sources":["../src/idl/jupiter4.ts","../src/utils/errors.ts","../src/constants.ts","../src/idl/jupiter5.ts","../src/utils/transactionHelpers.ts","../src/utils/wait.ts","../src/utils/eventExtractor.ts","../src/utils/executeTransaction.ts","../src/utils/fee.ts","../src/utils/Owner.ts","../src/utils/indexedRouteMap.ts","../src/utils/TransactionBuilder.ts","../src/utils/instruction.ts","../src/utils/token.ts","../src/types.ts","../src/instructions.ts","../src/fee.ts"],"sourcesContent":["export type JupiterV4 = {\n  version: '0.1.0';\n  name: 'jupiter';\n  instructions: [\n    {\n      name: 'route';\n      accounts: [\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'destinationTokenAccount';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [\n        {\n          name: 'swapLeg';\n          type: {\n            defined: 'SwapLeg';\n          };\n        },\n        {\n          name: 'inAmount';\n          type: 'u64';\n        },\n        {\n          name: 'quotedOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'slippageBps';\n          type: 'u16';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'whirlpoolSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'whirlpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray0';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray1';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray2';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'oracle';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'aToB';\n          type: 'bool';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'raydiumSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'raydiumClmmSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'ammConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'observationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'createOpenOrders';\n      accounts: [\n        {\n          name: 'openOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'mercurialSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cykuraSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'signer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'factoryState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'lastObservationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'coreProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'serumSwap';\n      accounts: [\n        {\n          name: 'market';\n          accounts: [\n            {\n              name: 'market';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'openOrders';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'requestQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'eventQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'bids';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'asks';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'coinVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'pcVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'vaultSigner';\n              isMut: false;\n              isSigner: false;\n            },\n          ];\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'orderPayerTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'coinWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pcWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'saberSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feesTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'saberAddDecimals';\n      accounts: [\n        {\n          name: 'addDecimalsProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapper';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWrappedTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'tokenSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'senchaSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'stepSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cropperSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'raydiumSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cremaSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'clmmConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'clmmpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenA';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenB';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'accountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenBVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArrayMap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'partner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'partnerAtaA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'partnerAtaB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'lifinitySwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'amm';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythPcAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'configAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marinadeDeposit';\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolSolLegPda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLeg';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLegAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'reservePda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'transferFrom';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'mintTo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMintAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tempWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'wsolMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marinadeUnstake';\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolSolLegPda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLeg';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'treasuryMsolAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'getMsolFrom';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'getMsolFromAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'transferSolTo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'aldrinSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'aldrinV2Swap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'curve';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'whirlpoolSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'whirlpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray0';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray1';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray2';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'oracle';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'invariantSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickmap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountX';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountY';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'reserveX';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'reserveY';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'programAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'meteoraSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVaultLpMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVaultLpMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVaultLp';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVaultLp';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'adminTokenFee';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'user';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'vaultProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'goosefxSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'controller';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pair';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'sslIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'sslOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liabilityVaultIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swappedLiabilityVaultIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liabilityVaultOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swappedLiabilityVaultOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userInAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userOutAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeCollectorAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWallet';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'feeCollector';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'deltafiSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'marketConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'deltafiUser';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'adminDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pythPriceBase';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythPriceQuote';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'balansolSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'taxMan';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bidMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'treasurer';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'srcTreasury';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'srcAssociatedTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'askMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'dstTreasury';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dstAssociatedTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dstTokenAccountTaxman';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'associatedTokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marcoPoloSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenX';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenY';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapperXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapperYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapper';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'referrerXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'referrerYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'referrer';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'programAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'associatedTokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'dradexSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pair';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'eventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dexUser';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'marketUser';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'asks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't0Vault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't1Vault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't0User';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't1User';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'master';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'signer';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'logger';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'lifinityV2Swap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'amm';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oracleMainAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oracleSubAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oraclePcAccount';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'raydiumClmmSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'ammConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'observationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'phoenixSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'logAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'trader';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'baseAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'symmetrySwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'buyer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'fundState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pdaAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pdaFromTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'buyerFromTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pdaToTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'buyerToTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'hostFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'managerFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenInfo';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'prismData';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n  ];\n  types: [\n    {\n      name: 'AmountWithSlippage';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'amount';\n            type: 'u64';\n          },\n          {\n            name: 'slippageBps';\n            type: 'u16';\n          },\n        ];\n      };\n    },\n    {\n      name: 'SplitLegDeeper';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'percent';\n            type: 'u8';\n          },\n          {\n            name: 'swapLeg';\n            type: {\n              defined: 'SwapLegSwap';\n            };\n          },\n        ];\n      };\n    },\n    {\n      name: 'SplitLeg';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'percent';\n            type: 'u8';\n          },\n          {\n            name: 'swapLeg';\n            type: {\n              defined: 'SwapLegDeeper';\n            };\n          },\n        ];\n      };\n    },\n    {\n      name: 'SwapInstrution';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Swap';\n            fields: [\n              {\n                defined: 'Swap';\n              },\n            ];\n          },\n        ];\n      };\n    },\n    {\n      name: 'Side';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Bid';\n          },\n          {\n            name: 'Ask';\n          },\n        ];\n      };\n    },\n    {\n      name: 'SwapLegSwap';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'PlaceholderOne';\n          },\n          {\n            name: 'PlaceholderTwo';\n          },\n          {\n            name: 'Swap';\n            fields: [\n              {\n                name: 'swap';\n                type: {\n                  defined: 'Swap';\n                };\n              },\n            ];\n          },\n        ];\n      };\n    },\n    {\n      name: 'SwapLegDeeper';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Chain';\n            fields: [\n              {\n                name: 'swap_legs';\n                type: {\n                  vec: {\n                    defined: 'SwapLegSwap';\n                  };\n                };\n              },\n            ];\n          },\n          {\n            name: 'Split';\n            fields: [\n              {\n                name: 'split_legs';\n                type: {\n                  vec: {\n                    defined: 'SplitLegDeeper';\n                  };\n                };\n              },\n            ];\n          },\n          {\n            name: 'Swap';\n            fields: [\n              {\n                name: 'swap';\n                type: {\n                  defined: 'Swap';\n                };\n              },\n            ];\n          },\n        ];\n      };\n    },\n    {\n      name: 'SwapLeg';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Chain';\n            fields: [\n              {\n                name: 'swap_legs';\n                type: {\n                  vec: {\n                    defined: 'SwapLegDeeper';\n                  };\n                };\n              },\n            ];\n          },\n          {\n            name: 'Split';\n            fields: [\n              {\n                name: 'split_legs';\n                type: {\n                  vec: {\n                    defined: 'SplitLeg';\n                  };\n                };\n              },\n            ];\n          },\n          {\n            name: 'Swap';\n            fields: [\n              {\n                name: 'swap';\n                type: {\n                  defined: 'Swap';\n                };\n              },\n            ];\n          },\n        ];\n      };\n    },\n    {\n      name: 'Swap';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Saber';\n          },\n          {\n            name: 'SaberAddDecimalsDeposit';\n          },\n          {\n            name: 'SaberAddDecimalsWithdraw';\n          },\n          {\n            name: 'TokenSwap';\n          },\n          {\n            name: 'Sencha';\n          },\n          {\n            name: 'Step';\n          },\n          {\n            name: 'Cropper';\n          },\n          {\n            name: 'Raydium';\n          },\n          {\n            name: 'Crema';\n            fields: [\n              {\n                name: 'a_to_b';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Lifinity';\n          },\n          {\n            name: 'Mercurial';\n          },\n          {\n            name: 'Cykura';\n          },\n          {\n            name: 'Serum';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'MarinadeDeposit';\n          },\n          {\n            name: 'MarinadeUnstake';\n          },\n          {\n            name: 'Aldrin';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'AldrinV2';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Whirlpool';\n            fields: [\n              {\n                name: 'a_to_b';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Invariant';\n            fields: [\n              {\n                name: 'x_to_y';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Meteora';\n          },\n          {\n            name: 'GooseFX';\n          },\n          {\n            name: 'DeltaFi';\n            fields: [\n              {\n                name: 'stable';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Balansol';\n          },\n          {\n            name: 'MarcoPolo';\n            fields: [\n              {\n                name: 'x_to_y';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Dradex';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'LifinityV2';\n          },\n          {\n            name: 'RaydiumClmm';\n          },\n          {\n            name: 'Openbook';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Phoenix';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Symmetry';\n            fields: [\n              {\n                name: 'fromTokenId';\n                type: 'u64';\n              },\n              {\n                name: 'toTokenId';\n                type: 'u64';\n              },\n            ];\n          },\n        ];\n      };\n    },\n    {\n      name: 'SwapAction';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'SetupSplit';\n            fields: [\n              {\n                name: 'percents';\n                type: 'bytes';\n              },\n            ];\n          },\n          {\n            name: 'NextSplitLeg';\n          },\n          {\n            name: 'MergeSplit';\n          },\n          {\n            name: 'Swap';\n            fields: [\n              {\n                name: 'swap';\n                type: {\n                  defined: 'Swap';\n                };\n              },\n            ];\n          },\n        ];\n      };\n    },\n  ];\n  events: [\n    {\n      name: 'Swap';\n      fields: [\n        {\n          name: 'amm';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'inputMint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'inputAmount';\n          type: 'u64';\n          index: false;\n        },\n        {\n          name: 'outputMint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'outputAmount';\n          type: 'u64';\n          index: false;\n        },\n      ];\n    },\n    {\n      name: 'Fee';\n      fields: [\n        {\n          name: 'account';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'mint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'amount';\n          type: 'u64';\n          index: false;\n        },\n      ];\n    },\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: 'EmptyRoute';\n      msg: 'Empty route';\n    },\n    {\n      code: 6001;\n      name: 'SlippageToleranceExceeded';\n      msg: 'Slippage tolerance exceeded';\n    },\n    {\n      code: 6002;\n      name: 'InvalidCalculation';\n      msg: 'Invalid calculation';\n    },\n    {\n      code: 6003;\n      name: 'MissingPlatformFeeAccount';\n      msg: 'Missing platform fee account';\n    },\n    {\n      code: 6004;\n      name: 'InvalidSlippage';\n      msg: 'Invalid slippage';\n    },\n    {\n      code: 6005;\n      name: 'NotEnoughPercent';\n      msg: 'Not enough percent to 100';\n    },\n    {\n      code: 6006;\n      name: 'InAmountsStackIsEmpty';\n      msg: 'In amounts stack is empty';\n    },\n    {\n      code: 6007;\n      name: 'OutAmountsStackIsEmpty';\n      msg: 'Out amounts stack is empty';\n    },\n    {\n      code: 6008;\n      name: 'NotEnoughAccountKeys';\n      msg: 'Not Enough Account keys';\n    },\n  ];\n};\n\nexport const IDL_V4: JupiterV4 = {\n  version: '0.1.0',\n  name: 'jupiter',\n  instructions: [\n    {\n      name: 'route',\n      accounts: [\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'destinationTokenAccount',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'swapLeg',\n          type: {\n            defined: 'SwapLeg',\n          },\n        },\n        {\n          name: 'inAmount',\n          type: 'u64',\n        },\n        {\n          name: 'quotedOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'slippageBps',\n          type: 'u16',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'whirlpoolSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'whirlpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray0',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray1',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray2',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'oracle',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'aToB',\n          type: 'bool',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumClmmSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'ammConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'observationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'createOpenOrders',\n      accounts: [\n        {\n          name: 'openOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'mercurialSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cykuraSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'signer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'factoryState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'lastObservationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'coreProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'serumSwap',\n      accounts: [\n        {\n          name: 'market',\n          accounts: [\n            {\n              name: 'market',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'openOrders',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'requestQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'eventQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'bids',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'asks',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'coinVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'pcVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultSigner',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'orderPayerTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'coinWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pcWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'saberSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feesTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'saberAddDecimals',\n      accounts: [\n        {\n          name: 'addDecimalsProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapper',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWrappedTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'tokenSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'senchaSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'stepSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cropperSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'raydiumSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cremaSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clmmConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clmmpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenA',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenB',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'accountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenBVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArrayMap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'partner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'partnerAtaA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'partnerAtaB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'lifinitySwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'amm',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythPcAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'configAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marinadeDeposit',\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolSolLegPda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLeg',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLegAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'reservePda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'transferFrom',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'mintTo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMintAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tempWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'wsolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marinadeUnstake',\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolSolLegPda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLeg',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'treasuryMsolAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'getMsolFrom',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'getMsolFromAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'transferSolTo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'aldrinSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'aldrinV2Swap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'curve',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'whirlpoolSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'whirlpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray0',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray1',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray2',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'oracle',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'invariantSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickmap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountX',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountY',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'reserveX',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'reserveY',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'programAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'meteoraSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVaultLpMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVaultLpMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVaultLp',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVaultLp',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'adminTokenFee',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'user',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vaultProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'goosefxSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'controller',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pair',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'sslIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'sslOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liabilityVaultIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swappedLiabilityVaultIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liabilityVaultOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swappedLiabilityVaultOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userInAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userOutAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeCollectorAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWallet',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'feeCollector',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'deltafiSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'marketConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'deltafiUser',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'adminDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pythPriceBase',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythPriceQuote',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'balansolSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'taxMan',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bidMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'treasurer',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'srcTreasury',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'srcAssociatedTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'askMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'dstTreasury',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dstAssociatedTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dstTokenAccountTaxman',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'associatedTokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marcoPoloSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenX',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenY',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapperXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapperYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapper',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'referrerXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'referrerYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'referrer',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'programAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'associatedTokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'dradexSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pair',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'eventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dexUser',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'marketUser',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'asks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't0Vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't1Vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't0User',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't1User',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'master',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'signer',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'logger',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'lifinityV2Swap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'amm',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oracleMainAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oracleSubAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oraclePcAccount',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'raydiumClmmSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'ammConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'observationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'phoenixSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'logAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'trader',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'baseAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'symmetrySwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'buyer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'fundState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pdaAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pdaFromTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'buyerFromTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pdaToTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'buyerToTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'hostFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'managerFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenInfo',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'prismData',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  types: [\n    {\n      name: 'AmountWithSlippage',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n          {\n            name: 'slippageBps',\n            type: 'u16',\n          },\n        ],\n      },\n    },\n    {\n      name: 'SplitLegDeeper',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'percent',\n            type: 'u8',\n          },\n          {\n            name: 'swapLeg',\n            type: {\n              defined: 'SwapLegSwap',\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'SplitLeg',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'percent',\n            type: 'u8',\n          },\n          {\n            name: 'swapLeg',\n            type: {\n              defined: 'SwapLegDeeper',\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'SwapInstrution',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Swap',\n            fields: [\n              {\n                defined: 'Swap',\n              },\n            ],\n          },\n        ],\n      },\n    },\n    {\n      name: 'Side',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Bid',\n          },\n          {\n            name: 'Ask',\n          },\n        ],\n      },\n    },\n    {\n      name: 'SwapLegSwap',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'PlaceholderOne',\n          },\n          {\n            name: 'PlaceholderTwo',\n          },\n          {\n            name: 'Swap',\n            fields: [\n              {\n                name: 'swap',\n                type: {\n                  defined: 'Swap',\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    {\n      name: 'SwapLegDeeper',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Chain',\n            fields: [\n              {\n                name: 'swap_legs',\n                type: {\n                  vec: {\n                    defined: 'SwapLegSwap',\n                  },\n                },\n              },\n            ],\n          },\n          {\n            name: 'Split',\n            fields: [\n              {\n                name: 'split_legs',\n                type: {\n                  vec: {\n                    defined: 'SplitLegDeeper',\n                  },\n                },\n              },\n            ],\n          },\n          {\n            name: 'Swap',\n            fields: [\n              {\n                name: 'swap',\n                type: {\n                  defined: 'Swap',\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    {\n      name: 'SwapLeg',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Chain',\n            fields: [\n              {\n                name: 'swap_legs',\n                type: {\n                  vec: {\n                    defined: 'SwapLegDeeper',\n                  },\n                },\n              },\n            ],\n          },\n          {\n            name: 'Split',\n            fields: [\n              {\n                name: 'split_legs',\n                type: {\n                  vec: {\n                    defined: 'SplitLeg',\n                  },\n                },\n              },\n            ],\n          },\n          {\n            name: 'Swap',\n            fields: [\n              {\n                name: 'swap',\n                type: {\n                  defined: 'Swap',\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    {\n      name: 'Swap',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Saber',\n          },\n          {\n            name: 'SaberAddDecimalsDeposit',\n          },\n          {\n            name: 'SaberAddDecimalsWithdraw',\n          },\n          {\n            name: 'TokenSwap',\n          },\n          {\n            name: 'Sencha',\n          },\n          {\n            name: 'Step',\n          },\n          {\n            name: 'Cropper',\n          },\n          {\n            name: 'Raydium',\n          },\n          {\n            name: 'Crema',\n            fields: [\n              {\n                name: 'a_to_b',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Lifinity',\n          },\n          {\n            name: 'Mercurial',\n          },\n          {\n            name: 'Cykura',\n          },\n          {\n            name: 'Serum',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'MarinadeDeposit',\n          },\n          {\n            name: 'MarinadeUnstake',\n          },\n          {\n            name: 'Aldrin',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'AldrinV2',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Whirlpool',\n            fields: [\n              {\n                name: 'a_to_b',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Invariant',\n            fields: [\n              {\n                name: 'x_to_y',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Meteora',\n          },\n          {\n            name: 'GooseFX',\n          },\n          {\n            name: 'DeltaFi',\n            fields: [\n              {\n                name: 'stable',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Balansol',\n          },\n          {\n            name: 'MarcoPolo',\n            fields: [\n              {\n                name: 'x_to_y',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Dradex',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'LifinityV2',\n          },\n          {\n            name: 'RaydiumClmm',\n          },\n          {\n            name: 'Openbook',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Phoenix',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Symmetry',\n            fields: [\n              {\n                name: 'fromTokenId',\n                type: 'u64',\n              },\n              {\n                name: 'toTokenId',\n                type: 'u64',\n              },\n            ],\n          },\n        ],\n      },\n    },\n    {\n      name: 'SwapAction',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'SetupSplit',\n            fields: [\n              {\n                name: 'percents',\n                type: 'bytes',\n              },\n            ],\n          },\n          {\n            name: 'NextSplitLeg',\n          },\n          {\n            name: 'MergeSplit',\n          },\n          {\n            name: 'Swap',\n            fields: [\n              {\n                name: 'swap',\n                type: {\n                  defined: 'Swap',\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  events: [\n    {\n      name: 'Swap',\n      fields: [\n        {\n          name: 'amm',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'inputMint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'inputAmount',\n          type: 'u64',\n          index: false,\n        },\n        {\n          name: 'outputMint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'outputAmount',\n          type: 'u64',\n          index: false,\n        },\n      ],\n    },\n    {\n      name: 'Fee',\n      fields: [\n        {\n          name: 'account',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'mint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'amount',\n          type: 'u64',\n          index: false,\n        },\n      ],\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: 'EmptyRoute',\n      msg: 'Empty route',\n    },\n    {\n      code: 6001,\n      name: 'SlippageToleranceExceeded',\n      msg: 'Slippage tolerance exceeded',\n    },\n    {\n      code: 6002,\n      name: 'InvalidCalculation',\n      msg: 'Invalid calculation',\n    },\n    {\n      code: 6003,\n      name: 'MissingPlatformFeeAccount',\n      msg: 'Missing platform fee account',\n    },\n    {\n      code: 6004,\n      name: 'InvalidSlippage',\n      msg: 'Invalid slippage',\n    },\n    {\n      code: 6005,\n      name: 'NotEnoughPercent',\n      msg: 'Not enough percent to 100',\n    },\n    {\n      code: 6006,\n      name: 'InAmountsStackIsEmpty',\n      msg: 'In amounts stack is empty',\n    },\n    {\n      code: 6007,\n      name: 'OutAmountsStackIsEmpty',\n      msg: 'Out amounts stack is empty',\n    },\n    {\n      code: 6008,\n      name: 'NotEnoughAccountKeys',\n      msg: 'Not Enough Account keys',\n    },\n  ],\n};\n","import { parseErrorForTransaction, TransactionError, UNKNOWN_ERROR } from '@mercurial-finance/optimist';\nimport { VersionedTransactionResponse } from '@solana/web3.js';\nimport {\n  COMMON_ERRORS,\n  JUPITER_V5_ERRORS,\n  JUPITER_PROGRAM_V5_ID,\n  JUPITER_PROGRAM_V5_1_ID,\n  JUPITER_PROGRAM_ID,\n} from '../constants';\n\n// Throws when not found or contains error to satisfy upper control flow\nexport function validateTransactionResponse({\n  txid,\n  transactionResponse,\n}: {\n  txid: string;\n  transactionResponse: VersionedTransactionResponse | null;\n}): VersionedTransactionResponse | TransactionError {\n  if (!transactionResponse) {\n    const errorDetails = COMMON_ERRORS['TransactionNotConfirmed'];\n    return new TransactionError(errorDetails.msg, txid, errorDetails.code, [JUPITER_PROGRAM_ID.toBase58()]);\n  }\n  if (transactionResponse?.meta?.err) {\n    let { message, programIds, code } = parseErrorForTransaction(transactionResponse);\n\n    // only map message if first program is jupiter\n    if (\n      (programIds?.[0] === JUPITER_PROGRAM_V5_ID.toBase58() ||\n        programIds?.[0] === JUPITER_PROGRAM_V5_1_ID.toBase58()) &&\n      code\n    ) {\n      Object.values(JUPITER_V5_ERRORS).some((error) => {\n        if (error.code === code) {\n          message = error.msg;\n          return true;\n        }\n        return;\n      });\n    }\n\n    if (!message) {\n      message = UNKNOWN_ERROR;\n    }\n\n    return new TransactionError(message || 'Something went wrong', txid, code, programIds);\n  }\n  return transactionResponse;\n}\n","import { Program, Provider } from '@coral-xyz/anchor';\nimport { Cluster, PublicKey } from '@solana/web3.js';\nimport { JupiterV4 as JupiterV4IDL, IDL_V4 } from './idl/jupiter4';\nimport { IDL_V5 } from './idl/jupiter5';\n\nexport const JUPITER_PROGRAM_V4_ID = new PublicKey('JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB');\nexport const JUPITER_PROGRAM_V5_ID = new PublicKey('JUP5pEAZeHdHrLxh5UCwAbpjGwYKKoquCpda2hfP4u8');\nexport const JUPITER_PROGRAM_V5_1_ID = new PublicKey('JUP5cHjnnCx2DppVsufsLrXs8EBZeEZzGtEK9Gdz6ow');\n\nexport const JUPITER_PROGRAM_ID_DEVNET = new PublicKey('BHzPYvC5J38kUeqkcUXwfraLWJ68cmGWm43ksF3i8bmk');\nexport const JUPITER_PROGRAM_ID_STAGING = new PublicKey('JUPSjgjMFjU4453KMgxhqVmzep6W352bQpE4RsNqXAx');\nexport const JUPITER_PROGRAM_ID_PRODUCTION = JUPITER_PROGRAM_V4_ID;\n\nexport const JUPITER_PROGRAM_ID = JUPITER_PROGRAM_ID_PRODUCTION;\n\nexport const JUPITER_PROGRAM = new Program<JupiterV4IDL>(IDL_V4, JUPITER_PROGRAM_ID, {} as Provider);\n\nexport const MAINNET_SERUM_DEX_PROGRAM = new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin');\n\nexport const DEVNET_SERUM_DEX_PROGRAM = new PublicKey('DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY');\n\nexport const RAYDIUM_AMM_V4_PROGRAM_ID = new PublicKey('675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8');\n\nexport const ALDRIN_SWAP_PROGRAM_ID = new PublicKey('AMM55ShdkoGRB5jVYPjWziwk8m5MpwyDgsMWHaMSQWH6');\n\n// https://github.com/aldrin-exchange/aldrin-sdk/blob/f93fe3f2d847d79d8ddff507d8d4f62fd803421b/src/v2.json\nexport const ALDRIN_SWAP_V2_PROGRAM_ID = new PublicKey('CURVGoZn8zycx6FXwwevgBTB2gVvdbGTEpvMJDbgs2t4');\n\nexport const SABER_ADD_DECIMALS_PROGRAM_ID = new PublicKey('DecZY86MU5Gj7kppfUCEmd4LbXXuyZH1yHaP2NTqdiZB');\n\nexport const CROPPER_PROGRAM_ID = new PublicKey('CTMAxxk34HjKWxQ3QLZK1HpaLXmBveao3ESePXbiyfzh');\n\nexport const SENCHA_PROGRAM_ID = new PublicKey('SCHAtsf8mbjyjiv4LkhLKutTf6JnZAbdJKFkXQNMFHZ');\n\nexport const LIFINITY_PROGRAM_ID = new PublicKey('EewxydAPCCVuNEyrVN68PuSYdQ7wKn27V9Gjeoi8dy3S');\n\nexport const CREMA_PROGRAM_ID = new PublicKey('CLMM9tUoggJu2wagPkkqs9eFG4BWhVBZWkP1qv3Sp7tR');\n// Crema requires a separate partner account controlled by them\nexport const CREMA_PARTNER_ACCOUNT = new PublicKey('FxYoB1VAx8TfLCwvmworJy16VH89v992qznUvBX5aR8K');\n\nexport const MERCURIAL_SWAP_PROGRAM_ID = new PublicKey('MERLuDFBMmsHnsBPZw2sDQZHvXFMwp8EdjudcU2HKky');\n\nexport const WHIRLPOOL_PROGRAM_ID = new PublicKey('whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc');\n\nexport const INVARIANT_PROGRAM_ID = new PublicKey('HyaB3W9q6XdA5xwpU4XnSZV94htfmbmqJXZcEbRaJutt');\nexport const INVARIANT_STATE_ID = new PublicKey('8NsPwRFYqob3FzYvHYTjFK6WVFJADFN8Hn7yNQKcVNW1');\nexport const INVARIANT_PROGRAM_AUTHORITY_ID = new PublicKey('J4uBbeoWpZE8fH58PM1Fp9n9K6f1aThyeVCyRdJbaXqt');\n\nexport const CYKURA_PROGRAM_ID = new PublicKey('cysPXAjehMpVKUapzbMCCnpFxUFFryEWEaLgnb9NrR8');\n\nexport const CYKURA_FACTORY_STATE_ADDRESS = new PublicKey('DBsMwKfeoUHhxMi9x6wd2AsT12UwUCssjNbUzu1aKgqj');\n\nexport const MARINADE_PROGRAM_ID = new PublicKey('MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD');\n\nexport const STEPN_PROGRAM_ID = new PublicKey('Dooar9JkhdZ7J3LHN3A7YCuoGRUggXhQaG4kijfLGU2j');\nexport const ORCA_V1_PROGRAM_ID = new PublicKey('DjVE6JNiYqPL2QXyCUUh8rNjHrbz9hXHNYt99MQ59qw1');\nexport const ORCA_V2_PROGRAM_ID = new PublicKey('9W959DqEETiGZocYWCQPaJ6sBmUzgfxXfqGeTEdp3aQP');\nexport const STEP_TOKEN_SWAP_PROGRAM_ID = new PublicKey('SSwpMgqNDsyV7mAgN9ady4bDVu5ySjmmXejXvy2vLt1');\n\nexport const PENGUIN_PROGRAM_ID = new PublicKey('PSwapMdSai8tjrEXcxFeQth87xC4rRsa4VA5mhGhXkP');\nexport const SAROS_PROGRAM_ID = new PublicKey('SSwapUtytfBdBn1b9NUGG6foMVPtcWgpRU32HToDUZr');\n\nexport const METEORA_PROGRAM_ID = new PublicKey('Eo7WjKq67rjJQSZxS6z3YkapzY3eMj6Xy8X5EQVn5UaB');\nexport const METEORA_VAULT_PROGRAM_ID = new PublicKey('24Uqj9JCLxUeoC3hGfh5W3s9FM9uCHDS2SG3LYwBpyTi');\n\nexport const DELTA_FI_PROGRAM_ID = new PublicKey('GNExJhNUhc9LN2DauuQAUJnXoy6DJ6zey3t9kT9A2PF3');\nexport const DELTA_FI_USER_ID = new PublicKey('ziSPuDShwunW4xNrCfTnSHTPVT6FZDREtdofpf1BJwe');\n\nexport const GOOSE_FX_PROGRAM_ID = new PublicKey('7WduLbRfYhTJktjLw5FDEyrqoEv61aTTCuGAetgLjzN5');\nexport const GOOSE_FX_CONTROLLER_ID = new PublicKey('8CxKnuJeoeQXFwiG6XiGY2akBjvJA5k3bE52BfnuEmNQ');\n\nexport const BALANSOL_PROGRAM_ID = new PublicKey('D3BBjqUdCYuP18fNvvMbPAZ8DpcRi4io2EsYHQawJDag');\n\nexport const DRADEX_PROGRAM_ID = new PublicKey('dp2waEWSBy5yKmq65ergoU3G6qRLmqa6K7We4rZSKph');\nexport const DRADEX_LOGGER_PROGRAM_ID = new PublicKey('1gE3LGQze8DQ3KD2C4ZUCmRX5g4njhY5yLfYmnmcvJR');\nexport const DRADEX_MASTER_ID = new PublicKey('76ygWLcvJLR6nSzRUpiQqqtX4Pabkq4vpaTxwr3mDcXA');\n\nexport const LIFINITY_V2_PROGRAM_ID = new PublicKey('2wT8Yq49kHgDzXuPxZSaeLaH1qbmGXtEyPy64bL7aD3c');\n\n// This is DexUser for Dradex with `BUX7s2ef2htTGb2KKoPHWkmzxPj4nTWMWRgs5CSbQxf9` as owner.\nexport const DRADEX_DEX_USER = new PublicKey('571oqNkJauZ2tccLwf8CUB56hpLPZkop9X1Px4DE9rnQ');\n\nexport const RAYDIUM_CLMM_PROGRAM_ID = new PublicKey('CAMMCzo5YL8w4VFF8KVHrK22GGUsp5VTaW7grrKgrWqK');\nexport const OPENBOOK_PROGRAM_ID = new PublicKey('srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX');\n\nexport const MARCO_POLO_PROGRAM_ID = new PublicKey('9tKE7Mbmj4mxDjWatikzGAtkoWosiiZX9y6J4Hfm2R8H');\nexport const MARCO_POLO_STATE_ID = new PublicKey('BE5YRQ6N6LCw7UL3JwzVp317EWa4mzJY6JKDaudcXu7A');\nexport const MARCO_POLO_PROGRAM_AUTHORITY = new PublicKey('JM78XNzeQRmZXDAP4DSq88ZdErbuSXSLE6fkRsVDKSu');\n\nexport const BONK_SWAP_PROGRAM_ID = new PublicKey('BSwp6bEBihVLdqJRKGgzjcGLHkcTuzmSo1TQkHepzH8p');\nexport const BONK_SWAP_STATE_ID = new PublicKey('2QWN6WjrJ3RAk51ecxLxaLPfFCYLAnmWJwJ1oKA92CRD');\nexport const BONK_SWAP_PROGRAM_AUTHORITY = new PublicKey('8NyaPDJeC2eaBGpkRpZKnD9S448AZGgjSvumFe92DRK2');\n\nexport const PHOENIX_PROGRAM_ID = new PublicKey('PhoeNiXZ8ByJGLkxNfZRnkUfjvmuYqLR89jjFHGqdXY');\n\nexport const SYMMETRY_PROGRAM_ID = new PublicKey('2KehYt3KsEQR53jYcxjbQp2d2kCp4AkuQW68atufRwSr');\n\nexport const WRAPPED_SOL_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n\nexport const MARKETS_URL: Record<Cluster, string> = {\n  devnet: 'https://jupiter-devnet.zhen8558.workers.dev/markets?v=3', // 'https://api.jup.ag/api/markets/cache/devnet',\n  'mainnet-beta': 'https://cache.jup.ag/markets?v=3',\n  testnet: 'https://api.jup.ag/api/markets/cache/devnet',\n};\n\nexport const INDEXED_ROUTE_MAP_URL = 'https://cache.jup.ag/indexed-route-maps-v3';\n\nexport const TOKEN_LIST_URL: Record<Cluster, string> = {\n  devnet: 'https://api.jup.ag/api/tokens/devnet',\n  testnet: 'https://api.jup.ag/api/markets/devnet',\n  'mainnet-beta': 'https://cache.jup.ag/tokens',\n};\n\nexport const LAMPORTS_PER_SIGNATURE = 5000;\n\n// The default wallet collecting referrer fees\nexport const JUPITER_FEE_OWNER = new PublicKey('BUX7s2ef2htTGb2KKoPHWkmzxPj4nTWMWRgs5CSbQxf9');\n\nexport interface ErrorDetails {\n  code: number;\n  name: string;\n  msg: string;\n}\n\ntype COMMON_ERRORS = 'TransactionNotConfirmed' | 'BalancesNotExtractedProperly' | 'InsufficientSOL';\n\ntype JUPITER_V5_ERROR_TYPES = COMMON_ERRORS | (typeof IDL_V5.errors)[number]['name'];\n\nexport const COMMON_ERRORS = {\n  AlreadyInUse: {\n    code: 1,\n    name: 'AlreadyInUsed',\n    msg: 'Account already In Used',\n  },\n  InsufficientSOL: {\n    code: 1,\n    name: 'InsufficientSOL',\n    msg: 'Insufficient SOL',\n  },\n  TransactionNotConfirmed: {\n    code: 7000, // a code that is not in the list of errors\n    name: 'TransactionNotConfirmed',\n    msg: 'Transaction was not confirmed',\n  },\n  BalancesNotExtractedProperly: {\n    code: 7001, // a code that is not in the list of errors\n    name: 'BalancesNotExtractedProperly',\n    msg: 'Balances cannot be extracted properly',\n  },\n};\n\nexport const JUPITER_V5_ERRORS: Record<JUPITER_V5_ERROR_TYPES, ErrorDetails> = Object.freeze({\n  ...COMMON_ERRORS,\n  ...IDL_V5.errors.reduce((accErrors, error) => {\n    return { ...accErrors, [error.name]: error };\n  }, {} as Record<(typeof IDL_V5.errors)[number]['name'], ErrorDetails>),\n});\n","export type JupiterV5 = {\n  version: '0.1.0';\n  name: 'jupiter';\n  instructions: [\n    {\n      name: 'route';\n      docs: ['route_plan Topologically sorted trade DAG'];\n      accounts: [\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'destinationTokenAccount';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [\n        {\n          name: 'routePlan';\n          type: {\n            vec: {\n              defined: 'RoutePlanStep';\n            };\n          };\n        },\n        {\n          name: 'inAmount';\n          type: 'u64';\n        },\n        {\n          name: 'quotedOutAmount';\n          type: 'u64';\n        },\n        {\n          name: 'slippageBps';\n          type: 'u16';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'whirlpoolSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'whirlpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray0';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray1';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray2';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'oracle';\n          isMut: false;\n          isSigner: false;\n          docs: ['Oracle is currently unused and will be enabled on subsequent updates'];\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'aToB';\n          type: 'bool';\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'raydiumSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'raydiumClmmSwapExactOutput';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'ammConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'observationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [\n        {\n          name: 'outAmount';\n          type: 'u64';\n        },\n        {\n          name: 'inAmountWithSlippage';\n          type: {\n            defined: 'AmountWithSlippage';\n          };\n        },\n        {\n          name: 'platformFeeBps';\n          type: 'u8';\n        },\n      ];\n    },\n    {\n      name: 'createOpenOrders';\n      accounts: [\n        {\n          name: 'openOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'mercurialSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cykuraSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'signer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'factoryState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'lastObservationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'coreProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'serumSwap';\n      accounts: [\n        {\n          name: 'market';\n          accounts: [\n            {\n              name: 'market';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'openOrders';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'requestQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'eventQueue';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'bids';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'asks';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'coinVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'pcVault';\n              isMut: true;\n              isSigner: false;\n            },\n            {\n              name: 'vaultSigner';\n              isMut: false;\n              isSigner: false;\n            },\n          ];\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'orderPayerTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'coinWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pcWallet';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dexProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'saberSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feesTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'saberAddDecimals';\n      accounts: [\n        {\n          name: 'addDecimalsProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapper';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'wrapperUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userUnderlyingTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWrappedTokens';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'tokenSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'senchaSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'inputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputUserAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputFeesAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'stepSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cropperSwap';\n      accounts: [\n        {\n          name: 'tokenSwapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swap';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapState';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'source';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolFee';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'raydiumSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammId';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'ammAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'ammOpenOrders';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolCoinTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolPcTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumProgramId';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'serumMarket';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumBids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumAsks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumEventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumCoinVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumPcVaultAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'serumVaultSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceOwner';\n          isMut: false;\n          isSigner: true;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'cremaSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'clmmConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'clmmpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenA';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenB';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'accountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenBVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArrayMap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'partner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'partnerAtaA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'partnerAtaB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'lifinitySwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'amm';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythPcAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'configAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marinadeDeposit';\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolSolLegPda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLeg';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLegAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'reservePda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'transferFrom';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'mintTo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMintAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tempWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'wsolMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marinadeUnstake';\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'msolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolSolLegPda';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liqPoolMsolLeg';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'treasuryMsolAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'getMsolFrom';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'getMsolFromAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'transferSolTo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userWsolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'aldrinSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'aldrinV2Swap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolSigner';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feePoolTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'walletAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'userBaseTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userQuoteTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'curve';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'whirlpoolSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'whirlpool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultA';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenOwnerAccountB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenVaultB';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray0';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray1';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray2';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'oracle';\n          isMut: false;\n          isSigner: false;\n          docs: ['Oracle is currently unused and will be enabled on subsequent updates'];\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'invariantSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tickmap';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountX';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'accountY';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'reserveX';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'reserveY';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'owner';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'programAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'meteoraSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bTokenVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVaultLpMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVaultLpMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'aVaultLp';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bVaultLp';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'adminTokenFee';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'user';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'vaultProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'goosefxSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'controller';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pair';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'sslIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'sslOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liabilityVaultIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swappedLiabilityVaultIn';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'liabilityVaultOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swappedLiabilityVaultOut';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userInAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userOutAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeCollectorAta';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userWallet';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'feeCollector';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'deltafiSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'marketConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'swapInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSourceToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'deltafiUser';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'adminDestinationToken';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pythPriceBase';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pythPriceQuote';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'userAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'balansolSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'taxMan';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bidMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'treasurer';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'srcTreasury';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'srcAssociatedTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'askMint';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'dstTreasury';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dstAssociatedTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dstTokenAccountTaxman';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'associatedTokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'marcoPoloSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'state';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pool';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenX';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenY';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapperXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapperYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapper';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'referrerXAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'referrerYAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'referrer';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'programAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'associatedTokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'rent';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'dradexSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pair';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'eventQueue';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'dexUser';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'marketUser';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'bids';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'asks';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't0Vault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't1Vault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't0User';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 't1User';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'master';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'signer';\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: 'systemProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'logger';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'lifinityV2Swap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'authority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'amm';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'userTransferAuthority';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'sourceInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'destinationInfo';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapSource';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapDestination';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'poolMint';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'feeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oracleMainAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oracleSubAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'oraclePcAccount';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'raydiumClmmSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'payer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'ammConfig';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'poolState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'inputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'outputVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'observationState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tickArray';\n          isMut: true;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'phoenixSwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'logAuthority';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'market';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'trader';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'baseAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'baseVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'quoteVault';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n    {\n      name: 'symmetrySwap';\n      accounts: [\n        {\n          name: 'swapProgram';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'buyer';\n          isMut: false;\n          isSigner: true;\n        },\n        {\n          name: 'fundState';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pdaAccount';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'pdaFromTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'buyerFromTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'pdaToTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'buyerToTokenAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'swapFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'hostFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'managerFeeAccount';\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: 'tokenInfo';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'prismData';\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: 'tokenProgram';\n          isMut: false;\n          isSigner: false;\n        },\n      ];\n      args: [];\n    },\n  ];\n  types: [\n    {\n      name: 'AmountWithSlippage';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'amount';\n            type: 'u64';\n          },\n          {\n            name: 'slippageBps';\n            type: 'u16';\n          },\n        ];\n      };\n    },\n    {\n      name: 'RoutePlanStep';\n      type: {\n        kind: 'struct';\n        fields: [\n          {\n            name: 'swap';\n            type: {\n              defined: 'Swap';\n            };\n          },\n          {\n            name: 'percent';\n            type: 'u8';\n          },\n          {\n            name: 'inputIndex';\n            type: 'u8';\n          },\n          {\n            name: 'outputIndex';\n            type: 'u8';\n          },\n        ];\n      };\n    },\n    {\n      name: 'Side';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Bid';\n          },\n          {\n            name: 'Ask';\n          },\n        ];\n      };\n    },\n    {\n      name: 'Swap';\n      type: {\n        kind: 'enum';\n        variants: [\n          {\n            name: 'Saber';\n          },\n          {\n            name: 'SaberAddDecimalsDeposit';\n          },\n          {\n            name: 'SaberAddDecimalsWithdraw';\n          },\n          {\n            name: 'TokenSwap';\n          },\n          {\n            name: 'Sencha';\n          },\n          {\n            name: 'Step';\n          },\n          {\n            name: 'Cropper';\n          },\n          {\n            name: 'Raydium';\n          },\n          {\n            name: 'Crema';\n            fields: [\n              {\n                name: 'a_to_b';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Lifinity';\n          },\n          {\n            name: 'Mercurial';\n          },\n          {\n            name: 'Cykura';\n          },\n          {\n            name: 'Serum';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'MarinadeDeposit';\n          },\n          {\n            name: 'MarinadeUnstake';\n          },\n          {\n            name: 'Aldrin';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'AldrinV2';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Whirlpool';\n            fields: [\n              {\n                name: 'a_to_b';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Invariant';\n            fields: [\n              {\n                name: 'x_to_y';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Meteora';\n          },\n          {\n            name: 'GooseFX';\n          },\n          {\n            name: 'DeltaFi';\n            fields: [\n              {\n                name: 'stable';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Balansol';\n          },\n          {\n            name: 'MarcoPolo';\n            fields: [\n              {\n                name: 'x_to_y';\n                type: 'bool';\n              },\n            ];\n          },\n          {\n            name: 'Dradex';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'LifinityV2';\n          },\n          {\n            name: 'RaydiumClmm';\n          },\n          {\n            name: 'Openbook';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Phoenix';\n            fields: [\n              {\n                name: 'side';\n                type: {\n                  defined: 'Side';\n                };\n              },\n            ];\n          },\n          {\n            name: 'Symmetry';\n            fields: [\n              {\n                name: 'from_token_id';\n                type: 'u64';\n              },\n              {\n                name: 'to_token_id';\n                type: 'u64';\n              },\n            ];\n          },\n        ];\n      };\n    },\n  ];\n  events: [\n    {\n      name: 'SwapEvent';\n      fields: [\n        {\n          name: 'amm';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'inputMint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'inputAmount';\n          type: 'u64';\n          index: false;\n        },\n        {\n          name: 'outputMint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'outputAmount';\n          type: 'u64';\n          index: false;\n        },\n      ];\n    },\n    {\n      name: 'FeeEvent';\n      fields: [\n        {\n          name: 'account';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'mint';\n          type: 'publicKey';\n          index: false;\n        },\n        {\n          name: 'amount';\n          type: 'u64';\n          index: false;\n        },\n      ];\n    },\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: 'EmptyRoute';\n      msg: 'Empty route';\n    },\n    {\n      code: 6001;\n      name: 'SlippageToleranceExceeded';\n      msg: 'Slippage tolerance exceeded';\n    },\n    {\n      code: 6002;\n      name: 'InvalidCalculation';\n      msg: 'Invalid calculation';\n    },\n    {\n      code: 6003;\n      name: 'MissingPlatformFeeAccount';\n      msg: 'Missing platform fee account';\n    },\n    {\n      code: 6004;\n      name: 'InvalidSlippage';\n      msg: 'Invalid slippage';\n    },\n    {\n      code: 6005;\n      name: 'NotEnoughPercent';\n      msg: 'Not enough percent to 100';\n    },\n    {\n      code: 6006;\n      name: 'InvalidInputIndex';\n      msg: 'Token input index is invalid';\n    },\n    {\n      code: 6007;\n      name: 'InvalidOutputIndex';\n      msg: 'Token output index is invalid';\n    },\n    {\n      code: 6008;\n      name: 'NotEnoughAccountKeys';\n      msg: 'Not Enough Account keys';\n    },\n    {\n      code: 6009;\n      name: 'NonZeroMinimumOutAmountNotSupported';\n      msg: 'Non zero minimum out amount not supported';\n    },\n    {\n      code: 6010;\n      name: 'InvalidRoutePlan';\n      msg: 'Invalid route plan';\n    },\n  ];\n};\n\nexport const IDL_V5: JupiterV5 = {\n  version: '0.1.0',\n  name: 'jupiter',\n  instructions: [\n    {\n      name: 'route',\n      docs: ['route_plan Topologically sorted trade DAG'],\n      accounts: [\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'destinationTokenAccount',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'routePlan',\n          type: {\n            vec: {\n              defined: 'RoutePlanStep',\n            },\n          },\n        },\n        {\n          name: 'inAmount',\n          type: 'u64',\n        },\n        {\n          name: 'quotedOutAmount',\n          type: 'u64',\n        },\n        {\n          name: 'slippageBps',\n          type: 'u16',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'whirlpoolSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'whirlpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray0',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray1',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray2',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'oracle',\n          isMut: false,\n          isSigner: false,\n          docs: ['Oracle is currently unused and will be enabled on subsequent updates'],\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'aToB',\n          type: 'bool',\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'raydiumClmmSwapExactOutput',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'ammConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'observationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'outAmount',\n          type: 'u64',\n        },\n        {\n          name: 'inAmountWithSlippage',\n          type: {\n            defined: 'AmountWithSlippage',\n          },\n        },\n        {\n          name: 'platformFeeBps',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'createOpenOrders',\n      accounts: [\n        {\n          name: 'openOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'mercurialSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cykuraSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'signer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'factoryState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'lastObservationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'coreProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'serumSwap',\n      accounts: [\n        {\n          name: 'market',\n          accounts: [\n            {\n              name: 'market',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'openOrders',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'requestQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'eventQueue',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'bids',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'asks',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'coinVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'pcVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultSigner',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'orderPayerTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'coinWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pcWallet',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dexProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'saberSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feesTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'saberAddDecimals',\n      accounts: [\n        {\n          name: 'addDecimalsProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapper',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'wrapperUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userUnderlyingTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWrappedTokens',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'tokenSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'senchaSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'inputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputUserAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputFeesAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'stepSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cropperSwap',\n      accounts: [\n        {\n          name: 'tokenSwapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swap',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapState',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'source',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolFee',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'raydiumSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammId',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'ammAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'ammOpenOrders',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolCoinTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolPcTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumProgramId',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'serumMarket',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumBids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumAsks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumEventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumCoinVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumPcVaultAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'serumVaultSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceOwner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'cremaSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clmmConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clmmpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenA',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenB',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'accountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenBVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArrayMap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'partner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'partnerAtaA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'partnerAtaB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'lifinitySwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'amm',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythPcAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'configAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marinadeDeposit',\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolSolLegPda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLeg',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLegAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'reservePda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'transferFrom',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'mintTo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMintAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tempWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'wsolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marinadeUnstake',\n      accounts: [\n        {\n          name: 'marinadeFinanceProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'msolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolSolLegPda',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liqPoolMsolLeg',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'treasuryMsolAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'getMsolFrom',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'getMsolFromAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'transferSolTo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userWsolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'aldrinSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'aldrinV2Swap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feePoolTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'walletAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'userBaseTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userQuoteTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'curve',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'whirlpoolSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'whirlpool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultA',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenOwnerAccountB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenVaultB',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray0',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray1',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray2',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'oracle',\n          isMut: false,\n          isSigner: false,\n          docs: ['Oracle is currently unused and will be enabled on subsequent updates'],\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'invariantSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tickmap',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountX',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'accountY',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'reserveX',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'reserveY',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'programAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'meteoraSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bTokenVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVaultLpMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVaultLpMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'aVaultLp',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bVaultLp',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'adminTokenFee',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'user',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vaultProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'goosefxSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'controller',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pair',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'sslIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'sslOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liabilityVaultIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swappedLiabilityVaultIn',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'liabilityVaultOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swappedLiabilityVaultOut',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userInAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userOutAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeCollectorAta',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userWallet',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'feeCollector',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'deltafiSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'marketConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'swapInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSourceToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'deltafiUser',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'adminDestinationToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pythPriceBase',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pythPriceQuote',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'userAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'balansolSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'taxMan',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bidMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'treasurer',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'srcTreasury',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'srcAssociatedTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'askMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'dstTreasury',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dstAssociatedTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dstTokenAccountTaxman',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'associatedTokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'marcoPoloSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'state',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pool',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenX',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenY',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapperXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapperYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapper',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'referrerXAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'referrerYAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'referrer',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'programAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'associatedTokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'dradexSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pair',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'eventQueue',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'dexUser',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'marketUser',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'bids',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'asks',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't0Vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't1Vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't0User',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 't1User',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'master',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'signer',\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: 'systemProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'logger',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'lifinityV2Swap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'amm',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'userTransferAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'sourceInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'destinationInfo',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapSource',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapDestination',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'feeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oracleMainAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oracleSubAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'oraclePcAccount',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'raydiumClmmSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'payer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'ammConfig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'inputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'outputVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'observationState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tickArray',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'phoenixSwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'logAuthority',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'market',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'trader',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'baseAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'baseVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'quoteVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'symmetrySwap',\n      accounts: [\n        {\n          name: 'swapProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'buyer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'fundState',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pdaAccount',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'pdaFromTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'buyerFromTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pdaToTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'buyerToTokenAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'swapFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'hostFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'managerFeeAccount',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenInfo',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'prismData',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  types: [\n    {\n      name: 'AmountWithSlippage',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n          {\n            name: 'slippageBps',\n            type: 'u16',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RoutePlanStep',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'swap',\n            type: {\n              defined: 'Swap',\n            },\n          },\n          {\n            name: 'percent',\n            type: 'u8',\n          },\n          {\n            name: 'inputIndex',\n            type: 'u8',\n          },\n          {\n            name: 'outputIndex',\n            type: 'u8',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Side',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Bid',\n          },\n          {\n            name: 'Ask',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Swap',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Saber',\n          },\n          {\n            name: 'SaberAddDecimalsDeposit',\n          },\n          {\n            name: 'SaberAddDecimalsWithdraw',\n          },\n          {\n            name: 'TokenSwap',\n          },\n          {\n            name: 'Sencha',\n          },\n          {\n            name: 'Step',\n          },\n          {\n            name: 'Cropper',\n          },\n          {\n            name: 'Raydium',\n          },\n          {\n            name: 'Crema',\n            fields: [\n              {\n                name: 'a_to_b',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Lifinity',\n          },\n          {\n            name: 'Mercurial',\n          },\n          {\n            name: 'Cykura',\n          },\n          {\n            name: 'Serum',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'MarinadeDeposit',\n          },\n          {\n            name: 'MarinadeUnstake',\n          },\n          {\n            name: 'Aldrin',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'AldrinV2',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Whirlpool',\n            fields: [\n              {\n                name: 'a_to_b',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Invariant',\n            fields: [\n              {\n                name: 'x_to_y',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Meteora',\n          },\n          {\n            name: 'GooseFX',\n          },\n          {\n            name: 'DeltaFi',\n            fields: [\n              {\n                name: 'stable',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Balansol',\n          },\n          {\n            name: 'MarcoPolo',\n            fields: [\n              {\n                name: 'x_to_y',\n                type: 'bool',\n              },\n            ],\n          },\n          {\n            name: 'Dradex',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'LifinityV2',\n          },\n          {\n            name: 'RaydiumClmm',\n          },\n          {\n            name: 'Openbook',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Phoenix',\n            fields: [\n              {\n                name: 'side',\n                type: {\n                  defined: 'Side',\n                },\n              },\n            ],\n          },\n          {\n            name: 'Symmetry',\n            fields: [\n              {\n                name: 'from_token_id',\n                type: 'u64',\n              },\n              {\n                name: 'to_token_id',\n                type: 'u64',\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  events: [\n    {\n      name: 'SwapEvent',\n      fields: [\n        {\n          name: 'amm',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'inputMint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'inputAmount',\n          type: 'u64',\n          index: false,\n        },\n        {\n          name: 'outputMint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'outputAmount',\n          type: 'u64',\n          index: false,\n        },\n      ],\n    },\n    {\n      name: 'FeeEvent',\n      fields: [\n        {\n          name: 'account',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'mint',\n          type: 'publicKey',\n          index: false,\n        },\n        {\n          name: 'amount',\n          type: 'u64',\n          index: false,\n        },\n      ],\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: 'EmptyRoute',\n      msg: 'Empty route',\n    },\n    {\n      code: 6001,\n      name: 'SlippageToleranceExceeded',\n      msg: 'Slippage tolerance exceeded',\n    },\n    {\n      code: 6002,\n      name: 'InvalidCalculation',\n      msg: 'Invalid calculation',\n    },\n    {\n      code: 6003,\n      name: 'MissingPlatformFeeAccount',\n      msg: 'Missing platform fee account',\n    },\n    {\n      code: 6004,\n      name: 'InvalidSlippage',\n      msg: 'Invalid slippage',\n    },\n    {\n      code: 6005,\n      name: 'NotEnoughPercent',\n      msg: 'Not enough percent to 100',\n    },\n    {\n      code: 6006,\n      name: 'InvalidInputIndex',\n      msg: 'Token input index is invalid',\n    },\n    {\n      code: 6007,\n      name: 'InvalidOutputIndex',\n      msg: 'Token output index is invalid',\n    },\n    {\n      code: 6008,\n      name: 'NotEnoughAccountKeys',\n      msg: 'Not Enough Account keys',\n    },\n    {\n      code: 6009,\n      name: 'NonZeroMinimumOutAmountNotSupported',\n      msg: 'Non zero minimum out amount not supported',\n    },\n    {\n      code: 6010,\n      name: 'InvalidRoutePlan',\n      msg: 'Invalid route plan',\n    },\n  ],\n};\n","import { TransactionError } from '@mercurial-finance/optimist';\nimport bs58 from 'bs58';\nimport {\n  AccountKeysFromLookups,\n  Blockhash,\n  ConfirmedTransactionMeta,\n  Connection,\n  PublicKey,\n  SendOptions,\n  Signer,\n  Transaction,\n  TransactionSignature,\n  VersionedMessage,\n  VersionedTransaction,\n  VersionedTransactionResponse,\n} from '@solana/web3.js';\nimport { COMMON_ERRORS, JUPITER_PROGRAM_ID, WRAPPED_SOL_MINT } from '../constants';\nimport { wait } from './wait';\nimport { EventExtractor } from './eventExtractor';\nimport { BN, Event } from '@coral-xyz/anchor';\n\n/** Should this be a method in web3.js? */\nfunction getKeyMap(message: VersionedMessage, accountKeysFromLookups: AccountKeysFromLookups | undefined) {\n  return message\n    .getAccountKeys({ accountKeysFromLookups })\n    .keySegments()\n    .flat()\n    .reduce((acc, key, index) => {\n      acc.set(key.toBase58(), index);\n      return acc;\n    }, new Map<string, number>());\n}\n\nfunction diffTokenBalance(accountKeyIndex: number, meta: ConfirmedTransactionMeta): number | undefined {\n  const postBalance = meta.postTokenBalances?.find(\n    (postTokenBalance) => postTokenBalance.accountIndex === accountKeyIndex,\n  )?.uiTokenAmount.amount;\n  const preBalance = meta.preTokenBalances?.find((preTokenBalance) => preTokenBalance.accountIndex === accountKeyIndex)\n    ?.uiTokenAmount.amount;\n\n  // When token account is created it isn't present in preBalance\n  if (!postBalance) return;\n  return Math.abs(parseInt(postBalance) - (preBalance !== undefined ? parseInt(preBalance) : 0));\n}\n\nexport function extractTokenBalanceChangeFromTransaction(\n  meta: ConfirmedTransactionMeta,\n  keyMap: Map<string, number>,\n  tokenAccountAddress: PublicKey,\n): number | undefined {\n  if (!meta) return;\n  const accountKeyIndex = keyMap.get(tokenAccountAddress.toBase58());\n  if (accountKeyIndex === undefined) return;\n\n  return diffTokenBalance(accountKeyIndex, meta);\n}\n\n/** Assumption: user is the signer so it can never be rolled */\nexport function extractSOLChangeFromTransaction(\n  meta: ConfirmedTransactionMeta,\n  keyMap: Map<string, number>,\n  user: PublicKey,\n): number {\n  const accountKeyIndex = keyMap.get(user.toBase58());\n  if (accountKeyIndex !== undefined) {\n    return Math.abs(meta.postBalances[accountKeyIndex] - meta.preBalances[accountKeyIndex]);\n  }\n\n  return 0;\n}\n\nexport function extractInputTokenBalanceChange(events: Event[], mint: PublicKey): number {\n  let balanceChange: BN = new BN(0);\n  events.forEach((event: any) => {\n    console.log({\n      mint: mint.toBase58(),\n      inputMint: event.data.inputMint.toBase58(),\n      inputAmoutn: event.data.inputAmount.toNumber(),\n    });\n    if (event.data.inputMint.equals(mint)) {\n      balanceChange = balanceChange.add(event.data.inputAmount);\n    }\n  });\n\n  return balanceChange.toNumber();\n}\n\nexport function extractOutputTokenBalanceChange(events: Event[], mint: PublicKey): number {\n  let balanceChange: BN = new BN(0);\n  events.forEach((event: any) => {\n    console.log({\n      mint: mint.toBase58(),\n      outputMint: event.data.outputMint.toBase58(),\n      outputAmoutn: event.data.outputAmount.toNumber(),\n    });\n    if (event.data.outputMint.equals(mint)) {\n      balanceChange = balanceChange.add(event.data.outputAmount);\n    }\n  });\n\n  return balanceChange.toNumber();\n}\n\nexport function getTokenBalanceChangesFromTransactionResponse({\n  txid,\n  inputMint,\n  outputMint,\n  user,\n  sourceAddress,\n  destinationAddress,\n  transactionResponse,\n  hasWrappedSOL,\n}: {\n  txid: TransactionSignature;\n  inputMint: PublicKey;\n  outputMint: PublicKey;\n  user: PublicKey;\n  sourceAddress: PublicKey;\n  destinationAddress: PublicKey;\n  transactionResponse: VersionedTransactionResponse | null;\n  hasWrappedSOL: boolean;\n}) {\n  let sourceTokenBalanceChange: number | undefined;\n  let destinationTokenBalanceChange: number | undefined;\n\n  if (transactionResponse && transactionResponse.meta) {\n    let { meta, transaction } = transactionResponse;\n    const logMessages = meta.logMessages;\n\n    if (logMessages) {\n      const extractor = new EventExtractor();\n      const events = extractor.getEvents(logMessages);\n      const swapEvents = events.filter((event) => event.name === 'SwapEvent');\n\n      sourceTokenBalanceChange = extractInputTokenBalanceChange(swapEvents, inputMint);\n      destinationTokenBalanceChange = extractOutputTokenBalanceChange(swapEvents, outputMint);\n    }\n\n    // If we don't get the balance changes from the events, we extract them the old fashion way.\n    if (!sourceTokenBalanceChange && !destinationTokenBalanceChange) {\n      const keyMap = getKeyMap(transaction.message, meta.loadedAddresses);\n\n      sourceTokenBalanceChange =\n        inputMint.equals(WRAPPED_SOL_MINT) && !hasWrappedSOL\n          ? extractSOLChangeFromTransaction(meta, keyMap, user)\n          : extractTokenBalanceChangeFromTransaction(meta, keyMap, sourceAddress);\n      destinationTokenBalanceChange =\n        outputMint.equals(WRAPPED_SOL_MINT) && !hasWrappedSOL\n          ? extractSOLChangeFromTransaction(meta, keyMap, user)\n          : extractTokenBalanceChangeFromTransaction(meta, keyMap, destinationAddress);\n    }\n  }\n\n  if (!(sourceTokenBalanceChange && destinationTokenBalanceChange)) {\n    throw new TransactionError(\n      'Cannot find source or destination token account balance change',\n      txid,\n      COMMON_ERRORS['BalancesNotExtractedProperly'].code,\n      [JUPITER_PROGRAM_ID.toBase58()],\n    );\n  }\n\n  return [sourceTokenBalanceChange, destinationTokenBalanceChange];\n}\n\nexport function getUnixTs() {\n  return new Date().getTime();\n}\n\nconst SEND_OPTIONS: SendOptions = { skipPreflight: true, maxRetries: 2 };\n\ntype TransactionSenderAndConfirmationWaiterArgs = {\n  connection: Connection;\n  signedTransaction: Transaction | VersionedTransaction;\n  timeout?: number;\n  pollInterval?: number;\n  sendInterval?: number;\n  sendRetries?: number;\n};\n\nasync function checkIsBlockhashValid({\n  connection,\n  blockhash,\n}: {\n  connection: Connection;\n  blockhash: Blockhash;\n}): Promise<boolean> {\n  const args = connection._buildArgs([blockhash], 'processed');\n  // @ts-ignore\n  const response = await connection._rpcRequest('isBlockhashValid', args);\n  const isBlockhashValid = response.result.value;\n  return isBlockhashValid;\n}\n\n/**\n * awaits confirmation while resending the transaction periodically\n *\n * Our RPC node settings\n * solana_send_leader_count: 8\n * solana_send_retry_ms: 15000\n **/\nexport async function transactionSenderAndConfirmationWaiter({\n  connection,\n  signedTransaction,\n  pollInterval = 500,\n  sendInterval = 2_000,\n  sendRetries = 40,\n}: TransactionSenderAndConfirmationWaiterArgs): Promise<{\n  txid: TransactionSignature;\n  transactionResponse: VersionedTransactionResponse | null;\n}> {\n  const rawTransaction = signedTransaction.serialize();\n  const { blockhash } = getTransactionBlockhashAndFeePayer(signedTransaction);\n  const txid = await connection.sendRawTransaction(rawTransaction, SEND_OPTIONS);\n  let lastSendTimestamp = getUnixTs();\n  let retries = 0;\n\n  while (true) {\n    const timestamp = getUnixTs();\n    if (retries < sendRetries && timestamp - lastSendTimestamp > sendInterval) {\n      lastSendTimestamp = timestamp;\n      retries += 1;\n      await connection.sendRawTransaction(rawTransaction, SEND_OPTIONS);\n    }\n    const isBlockhashValid = await checkIsBlockhashValid({ connection, blockhash });\n    const response = await Promise.any([\n      connection.getTransaction(txid, {\n        commitment: 'confirmed',\n        maxSupportedTransactionVersion: 0,\n      }),\n      wait(5000),\n    ]);\n    if (response) return { txid, transactionResponse: response };\n    if (!isBlockhashValid)\n      return {\n        txid,\n        transactionResponse: null,\n      };\n    await wait(pollInterval);\n  }\n}\n\nexport function getSignature(transaction: Transaction | VersionedTransaction): string {\n  const signature = 'signature' in transaction ? transaction.signature : transaction.signatures[0];\n  if (!signature) {\n    throw new Error('Transaction has no signature');\n  }\n  return bs58.encode(signature);\n}\n\nexport function getTransactionBlockhashAndFeePayer(transaction: Transaction | VersionedTransaction): {\n  blockhash: Blockhash;\n  feePayer: PublicKey;\n} {\n  if ('message' in transaction) {\n    return { feePayer: transaction.message.staticAccountKeys[0], blockhash: transaction.message.recentBlockhash };\n  } else {\n    if (!transaction.feePayer) throw new Error('Missing feePayer');\n    if (!transaction.recentBlockhash) throw new Error('Missing blockhash');\n    return { feePayer: transaction.feePayer, blockhash: transaction.recentBlockhash };\n  }\n}\n\nexport function signTransaction(\n  transaction: Transaction | VersionedTransaction,\n  signers: Signer[],\n): TransactionSignature {\n  if ('message' in transaction) {\n    transaction.sign(signers);\n  } else {\n    transaction.sign(...signers);\n  }\n  return getSignature(transaction);\n}\n","export const wait = (time: number) => new Promise<void>((resolve) => setTimeout(resolve, time));\n","import { EventParser } from '@coral-xyz/anchor';\nimport { BorshCoder } from '@coral-xyz/anchor';\nimport { IDL_V5 } from '../idl/jupiter5';\nimport { JUPITER_PROGRAM_V5_1_ID } from '../constants';\n\nexport class EventExtractor {\n  private coder: BorshCoder;\n  private parser: EventParser;\n\n  constructor() {\n    this.coder = new BorshCoder(IDL_V5);\n    this.parser = new EventParser(JUPITER_PROGRAM_V5_1_ID, this.coder);\n  }\n\n  public getEvents(logs: string[]) {\n    return [...this.parser.parseLogs(logs)];\n  }\n}\n","import { Connection, PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { TransactionError } from '@mercurial-finance/optimist';\nimport { Owner } from './Owner';\nimport { ExecuteParams, OnTransaction, SwapResult } from '../types';\nimport {\n  getSignature,\n  getTokenBalanceChangesFromTransactionResponse,\n  signTransaction,\n  transactionSenderAndConfirmationWaiter,\n} from './transactionHelpers';\nimport { validateTransactionResponse } from './errors';\n\n/** sign, send and await confirmation for an exchange */\nexport const executeTransaction = async ({\n  connection,\n  wallet,\n  onTransaction,\n  inputMint,\n  outputMint,\n  sourceAddress,\n  destinationAddress,\n  swapTransaction,\n  owner,\n  wrapUnwrapSOL,\n}: {\n  connection: Connection;\n  wallet: ExecuteParams['wallet'];\n  onTransaction?: OnTransaction;\n  inputMint: PublicKey;\n  outputMint: PublicKey;\n  sourceAddress: PublicKey;\n  destinationAddress: PublicKey;\n  swapTransaction: Transaction | VersionedTransaction;\n  owner: Owner;\n  wrapUnwrapSOL?: boolean;\n}): Promise<SwapResult> => {\n  let swapError: TransactionError | undefined = undefined;\n  let swapResult: SwapResult | undefined = undefined;\n\n  try {\n    if (owner.signer) {\n      signTransaction(swapTransaction, [owner.signer]);\n    } else {\n      if (!wallet) throw new Error('Signer wallet not found');\n      swapTransaction = await wallet.signTransaction(swapTransaction);\n    }\n\n    const swapTxid = getSignature(swapTransaction);\n\n    try {\n      const swapTransactionSender = async () => {\n        return await validateTransactionResponse(\n          await transactionSenderAndConfirmationWaiter({ connection, signedTransaction: swapTransaction }),\n        );\n      };\n      const swapPromise = swapTransactionSender();\n      onTransaction?.(swapTxid, swapPromise);\n      const transactionResponse = await swapPromise;\n\n      if (transactionResponse instanceof Error) {\n        throw transactionResponse;\n      }\n\n      const [sourceTokenBalanceChange, destinationTokenBalanceChange] =\n        await getTokenBalanceChangesFromTransactionResponse({\n          txid: swapTxid,\n          inputMint,\n          outputMint,\n          user: owner.publicKey,\n          sourceAddress,\n          destinationAddress,\n          transactionResponse,\n          hasWrappedSOL: !wrapUnwrapSOL,\n        });\n\n      swapResult = {\n        txid: swapTxid,\n        inputAddress: sourceAddress,\n        outputAddress: destinationAddress,\n        inputAmount: sourceTokenBalanceChange,\n        outputAmount: destinationTokenBalanceChange,\n      };\n    } catch (e: any) {\n      console.error(e);\n      swapError = e;\n    } finally {\n    }\n\n    if (swapError || !swapResult) {\n      throw swapError || new Error('Swap failed');\n    }\n\n    return swapResult;\n  } catch (error: any) {\n    return { error: error as TransactionError };\n  }\n};\n","import { deserializeAccount } from '@mercurial-finance/optimist';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { Connection, PublicKey } from '@solana/web3.js';\n\nexport async function getPlatformFeeAccounts(\n  connection: Connection,\n  feeAccountOwner: PublicKey,\n): Promise<Map<string, PublicKey>> {\n  const tokenAccounts = (\n    await connection.getTokenAccountsByOwner(feeAccountOwner, {\n      programId: TOKEN_PROGRAM_ID,\n    })\n  ).value;\n\n  const feeAccounts = tokenAccounts.reduce((acc, tokenAccount) => {\n    const deserializedtokenAccount = deserializeAccount(tokenAccount.account.data);\n    if (deserializedtokenAccount) {\n      acc.set(deserializedtokenAccount.mint.toBase58(), tokenAccount.pubkey);\n    }\n    return acc;\n  }, new Map<string, PublicKey>());\n\n  return feeAccounts;\n}\n","import { Keypair, PublicKey, Signer } from '@solana/web3.js';\n\ntype _Owner = Keypair | PublicKey;\n\nexport class Owner {\n  private readonly _owner: _Owner;\n\n  constructor(owner: _Owner) {\n    this._owner = owner;\n  }\n\n  get publicKey(): PublicKey {\n    if (Owner.isKeyPair(this._owner)) {\n      return this._owner.publicKey;\n    }\n\n    return this._owner;\n  }\n\n  get signer(): Signer | undefined {\n    return Owner.isKeyPair(this._owner) ? this._owner : undefined;\n  }\n\n  get isKeyPair(): boolean {\n    return Owner.isKeyPair(this._owner);\n  }\n\n  get isPublicKey(): boolean {\n    return Owner.isPublicKey(this._owner);\n  }\n\n  static isKeyPair(owner: _Owner): owner is Keypair {\n    return (owner as Keypair).secretKey !== undefined;\n  }\n\n  static isPublicKey(owner: _Owner): owner is PublicKey {\n    return !Owner.isKeyPair(owner);\n  }\n}\n","import { INDEXED_ROUTE_MAP_URL } from '..';\n\nexport interface IndexedRouteMap {\n  mintKeys: string[];\n  indexedRouteMap: { [key: number]: number[] };\n}\n\nfunction getOrAddKeyToIndexMap(pk: string, mintToIndexMap: Map<string, number>): number {\n  let keyIndex = mintToIndexMap.get(pk);\n  if (keyIndex === undefined) {\n    keyIndex = mintToIndexMap.size;\n    mintToIndexMap.set(pk, keyIndex);\n  }\n  return keyIndex;\n}\n\n/** An indexed route map which is light (less data to compress/decompress) and can quickly be inflated into the full route map  */\nexport function routeMapToIndexedRouteMap(routeMap: Map<string, string[]>) {\n  const { mintToIndexMap, indexedRouteMap: innerIndexedRouteMap } = Array.from(routeMap).reduce<{\n    mintToIndexMap: Map<string, number>;\n    indexedRouteMap: Record<number, number[]>;\n  }>(\n    ({ mintToIndexMap, indexedRouteMap }, [key, item]) => {\n      const keyIndex = getOrAddKeyToIndexMap(key, mintToIndexMap);\n\n      const indexedOutputMintCache = [];\n      for (const routeOutputKey of item) {\n        const routeOutputKeyIndex = getOrAddKeyToIndexMap(routeOutputKey, mintToIndexMap);\n        indexedOutputMintCache.push(routeOutputKeyIndex);\n      }\n      indexedRouteMap[keyIndex] = indexedOutputMintCache;\n\n      return { mintToIndexMap, indexedRouteMap };\n    },\n    { mintToIndexMap: new Map(), indexedRouteMap: {} },\n  );\n\n  const indexedRouteMap = {\n    mintKeys: Array.from(mintToIndexMap.keys()),\n    indexedRouteMap: innerIndexedRouteMap,\n  };\n\n  return indexedRouteMap;\n}\n\nexport function indexedRouteMapToRouteMap(indexedRouteMap: IndexedRouteMap) {\n  const getMint = (index: number) => indexedRouteMap.mintKeys[index];\n\n  // generate route map by replacing indexes with mint addresses\n  const generatedRouteMap: Map<string, string[]> = new Map();\n  Object.keys(indexedRouteMap.indexedRouteMap).forEach((key) => {\n    generatedRouteMap.set(\n      getMint(key as any as number),\n      indexedRouteMap['indexedRouteMap'][key as any as number].map((index: number) => getMint(index)),\n    );\n  });\n\n  return generatedRouteMap;\n}\n\nexport async function getRemoteRouteMap(\n  {\n    onlyDirectRoutes,\n    restrictIntermediateTokens,\n    asLegacyTransaction,\n  }: { onlyDirectRoutes?: boolean; restrictIntermediateTokens?: boolean; asLegacyTransaction?: boolean },\n  indexedRouteMapUrl?: string,\n) {\n  let url = indexedRouteMapUrl || INDEXED_ROUTE_MAP_URL;\n  if (onlyDirectRoutes) {\n    url = url.concat('?onlyDirectRoutes=true');\n  } else if (restrictIntermediateTokens) {\n    url = url.concat('?restrictIntermediateTokens=true');\n  }\n\n  if (asLegacyTransaction) {\n    url = url.concat('?asLegacyTransaction=true');\n  }\n\n  const indexedRouteMap = (await (await fetch(url)).json()) as IndexedRouteMap;\n\n  return indexedRouteMapToRouteMap(indexedRouteMap);\n}\n","import {\n  Connection,\n  PublicKey,\n  Signer,\n  TransactionInstruction,\n  BlockhashWithExpiryBlockHeight,\n  sendAndConfirmRawTransaction,\n  TransactionMessage,\n  VersionedTransaction,\n  Transaction,\n  AddressLookupTableAccount,\n} from '@solana/web3.js';\nimport { Instruction, TransactionPayload } from './instruction';\nimport { Owner } from './Owner';\nimport { signTransaction } from './transactionHelpers';\n\nexport class TransactionBuilder {\n  private connection: Connection;\n  private feePayer: PublicKey;\n  private instructions: Instruction[];\n  private owner: Owner;\n\n  constructor(connection: Connection, feePayer: PublicKey, owner: Owner) {\n    this.connection = connection;\n    this.feePayer = feePayer;\n    this.instructions = [];\n    this.owner = owner;\n  }\n\n  addInstruction(instruction: Instruction): TransactionBuilder {\n    this.instructions.push(instruction);\n    return this;\n  }\n\n  async build(\n    blockhashWithExpiryBlockHeight: BlockhashWithExpiryBlockHeight,\n    addressLookupTables: AddressLookupTableAccount[],\n    asLegacyTransaction?: boolean,\n  ): Promise<TransactionPayload> {\n    let instructions: TransactionInstruction[] = [];\n    let setupInstructions: TransactionInstruction[] = [];\n    let cleanupInstructions: TransactionInstruction[] = [];\n    let signers: Signer[] = [];\n    this.instructions.forEach((curr) => {\n      setupInstructions = setupInstructions.concat(curr.setupInstructions);\n      instructions = instructions.concat(curr.instructions);\n      cleanupInstructions = cleanupInstructions.concat(curr.cleanupInstructions);\n      signers = signers.concat(curr.signers);\n    });\n\n    const transactionInstructions = setupInstructions.concat(instructions).concat(cleanupInstructions);\n\n    const transaction = asLegacyTransaction\n      ? this.buildLegacyTransaction({ transactionInstructions, blockhashWithExpiryBlockHeight })\n      : this.buildVersionedTransaction({\n          transactionInstructions,\n          blockhashWithExpiryBlockHeight,\n          addressLookupTables,\n        });\n\n    return {\n      transaction,\n      signers,\n      execute: this.owner.isKeyPair\n        ? () => {\n            const signature = signTransaction(transaction, [this.owner.signer!, ...signers]);\n            const serializedTx = transaction.serialize();\n            return sendAndConfirmRawTransaction(this.connection, Buffer.from(serializedTx), {\n              signature,\n              ...blockhashWithExpiryBlockHeight,\n            });\n          }\n        : async () => {\n            throw new Error('Please use a Keypair for the owner parameter to enable the execute function');\n          },\n    };\n  }\n\n  private buildLegacyTransaction({\n    transactionInstructions,\n    blockhashWithExpiryBlockHeight,\n  }: {\n    transactionInstructions: TransactionInstruction[];\n    blockhashWithExpiryBlockHeight: BlockhashWithExpiryBlockHeight;\n  }) {\n    return new Transaction({ feePayer: this.feePayer, ...blockhashWithExpiryBlockHeight }).add(\n      ...transactionInstructions,\n    );\n  }\n\n  private buildVersionedTransaction({\n    transactionInstructions,\n    blockhashWithExpiryBlockHeight,\n    addressLookupTables,\n  }: {\n    transactionInstructions: TransactionInstruction[];\n    blockhashWithExpiryBlockHeight: BlockhashWithExpiryBlockHeight;\n    addressLookupTables: AddressLookupTableAccount[];\n  }) {\n    const transactionMessage = new TransactionMessage({\n      payerKey: this.feePayer,\n      instructions: transactionInstructions,\n      recentBlockhash: blockhashWithExpiryBlockHeight.blockhash,\n    });\n\n    const messageV0 = transactionMessage.compileToV0Message(addressLookupTables);\n    return new VersionedTransaction(messageV0);\n  }\n}\n","import {\n  Signer,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n  VersionedTransaction,\n} from '@solana/web3.js';\n\nexport const getEmptyInstruction: () => Instruction = () => ({\n  setupInstructions: [],\n  instructions: [],\n  cleanupInstructions: [],\n  signers: [],\n});\n\nexport type Instruction = {\n  setupInstructions: TransactionInstruction[];\n  instructions: TransactionInstruction[];\n  cleanupInstructions: TransactionInstruction[];\n  signers: Signer[];\n};\n\nexport type TransactionPayload = {\n  transaction: Transaction | VersionedTransaction;\n  signers: Signer[];\n  execute: () => Promise<TransactionSignature>;\n};\n","import { deserializeAccount } from '@mercurial-finance/optimist';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { Connection, PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport { WRAPPED_SOL_MINT } from '../constants';\nimport { getEmptyInstruction, Instruction } from './instruction';\nimport { Owner } from './Owner';\n\n// Leverage the existing ATA when present\nexport async function createAndCloseWSOLAccount({\n  connection,\n  amount,\n  owner: { publicKey },\n}: {\n  connection: Connection;\n  owner: Owner;\n  amount: JSBI;\n}): Promise<Instruction & { address: PublicKey }> {\n  const result = getEmptyInstruction();\n\n  const toAccount = findAssociatedTokenAddress({\n    walletAddress: publicKey,\n    tokenMintAddress: WRAPPED_SOL_MINT,\n  });\n\n  const info = await connection.getAccountInfo(toAccount);\n\n  if (info === null) {\n    result.setupInstructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(publicKey, toAccount, publicKey, WRAPPED_SOL_MINT),\n    );\n  }\n\n  // Fund account and sync\n  result.setupInstructions.push(\n    SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: toAccount,\n      lamports: JSBI.toNumber(amount),\n    }),\n  );\n  result.setupInstructions.push(\n    // This is not exposed by the types, but indeed it exists\n    (Token as any).createSyncNativeInstruction(TOKEN_PROGRAM_ID, toAccount),\n  );\n\n  result.cleanupInstructions = [\n    Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, toAccount, publicKey, publicKey, []),\n  ];\n\n  return {\n    address: toAccount,\n    ...result,\n  };\n}\n\nexport async function findOrCreateAssociatedAccountByMint({\n  connection,\n  payer,\n  owner: { publicKey },\n  mintAddress,\n  unwrapSOL,\n}: {\n  connection: Connection;\n  payer: PublicKey;\n  owner: Owner;\n  mintAddress: PublicKey | string;\n  unwrapSOL: boolean;\n}): Promise<Instruction & { address: PublicKey }> {\n  const mint = typeof mintAddress === 'string' ? new PublicKey(mintAddress) : mintAddress;\n  const toAccount = findAssociatedTokenAddress({\n    tokenMintAddress: mint,\n    walletAddress: publicKey,\n  });\n  const result = getEmptyInstruction();\n\n  const info = await connection.getAccountInfo(toAccount);\n\n  if (info === null) {\n    result.setupInstructions.push(createAssociatedTokenAccountIdempotentInstruction(payer, toAccount, publicKey, mint));\n  } else {\n    const tokenAccountInfo = deserializeAccount(info.data);\n\n    if (tokenAccountInfo && !tokenAccountInfo.owner.equals(publicKey)) {\n      // What to do at the top level in UIs and SDK?\n      throw new Error(`/!\\ ATA ${toAccount.toBase58()} is not owned by ${publicKey.toBase58()}`);\n    }\n  }\n\n  // We close it when wrapped SOL\n  if (mint.equals(WRAPPED_SOL_MINT) && unwrapSOL) {\n    result.cleanupInstructions.push(\n      Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, toAccount, publicKey, publicKey, []),\n    );\n  }\n\n  return {\n    address: toAccount,\n    ...result,\n  };\n}\n\n// 0.1.x @solana/spl-token does not have the version without the rent sysvar\n// Source: https://github.com/solana-labs/solana-program-library/blob/dc5684445f0b42ba36a0157f06c561d967a7cb34/associated-token-account/program/src/instruction.rs#L16-L25\nexport function createAssociatedTokenAccountIdempotentInstruction(\n  payer: PublicKey,\n  associatedToken: PublicKey,\n  owner: PublicKey,\n  mint: PublicKey,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID,\n): TransactionInstruction {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedToken, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n    { pubkey: programId, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: associatedTokenProgramId,\n    data: Buffer.from([1]),\n  });\n}\n\nexport const findAssociatedTokenAddress = ({\n  walletAddress,\n  tokenMintAddress,\n}: {\n  walletAddress: PublicKey;\n  tokenMintAddress: PublicKey;\n}): PublicKey => {\n  return PublicKey.findProgramAddressSync(\n    [walletAddress.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), tokenMintAddress.toBuffer()],\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n  )[0];\n};\n","import { TransactionError } from '@mercurial-finance/optimist';\nimport type { SignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport {\n  BlockhashWithExpiryBlockHeight,\n  PublicKey,\n  TransactionSignature,\n  VersionedTransactionResponse,\n} from '@solana/web3.js';\nimport JSBI from 'jsbi';\nimport { Instruction } from './utils';\n\nexport type TokenMintAddress = string;\n\nexport type PlatformFeeAndAccounts = {\n  feeBps: number;\n  feeAccounts: Map<string, PublicKey>;\n};\n\nexport type PlatformFee = {\n  feeBps: number;\n  feeAccount: PublicKey;\n};\n\nexport type QuoteMintToReferrer = Map<TokenMintAddress, PublicKey>;\n\nexport interface Fee {\n  amount: JSBI;\n  mint: string;\n  pct: number;\n}\n\nexport type SwapResult =\n  | {\n      txid: string;\n      inputAddress: PublicKey;\n      outputAddress: PublicKey;\n      inputAmount: number;\n      outputAmount: number;\n    }\n  | {\n      error?: TransactionError;\n    };\n\nexport enum SwapMode {\n  ExactIn = 'ExactIn',\n  ExactOut = 'ExactOut',\n}\n\nexport type OnTransaction = (\n  txid: TransactionSignature,\n  awaiter: Promise<VersionedTransactionResponse | TransactionError | null>,\n) => void;\n\nexport type ExecuteParams = {\n  wallet?: Pick<SignerWalletAdapter, 'signAllTransactions' | 'signTransaction'>;\n  /**\n   * Allows to customize control of sending and awaiting confirmation in the single/multi transaction flow\n   */\n  onTransaction?: OnTransaction;\n};\n\nexport interface TransactionFeeInfo {\n  signatureFee: number;\n  openOrdersDeposits: number[];\n  ataDeposits: number[];\n  /* Overall amount that will be deducted from user wallet after the swap */\n  totalFeeAndDeposits: number;\n  /* Amount for fee, deposits and temporary token accounts */\n  minimumSOLForTransaction: number;\n}\n\nexport interface ExchangeParams<T> {\n  routeInfo: T;\n  /**\n   * This will overwrite the default Jupiter.setUser, useful for stateless usage like API\n   */\n  userPublicKey?: PublicKey;\n  /**\n   * This will overwrite the default fee account, useful for stateless usage like API\n   */\n  feeAccount?: PublicKey;\n  /**\n   * This will overwrite the default wrapUnwrapSOL, useful for stateless usage like API\n   */\n  wrapUnwrapSOL?: boolean;\n  /**\n   * The transaction will use the blockhash and valid blockheight to create transaction\n   */\n  blockhashWithExpiryBlockHeight?: BlockhashWithExpiryBlockHeight;\n  /**\n   * Produces a legacy transaction\n   */\n  asLegacyTransaction?: boolean;\n  /**\n   * compute unit price in micro lamports, the swap transaction will cost consumed compute units * computeUnitPriceMicroLamports, see https://docs.solana.com/developing/programming-model/runtime#prioritization-fees\n   */\n  computeUnitPriceMicroLamports?: number | 'auto';\n}\n\nexport type SetupInstructions = {\n  openOrders: ((Instruction & { address: PublicKey }) | undefined)[];\n  intermediates: (Instruction & { address: PublicKey })[];\n  destination: Instruction & { address: PublicKey };\n};\n","import { Connection, PublicKey, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { JUPITER_PROGRAM, JUPITER_PROGRAM_ID } from './constants';\nimport { findOrCreateAssociatedAccountByMint, getEmptyInstruction, Instruction, Owner } from './utils';\n\nexport function createOpenOrdersInstruction(\n  serumMarket: PublicKey,\n  serumProgramId: PublicKey,\n  userTransferAuthority: PublicKey,\n): [PublicKey, TransactionInstruction] {\n  const [openOrders] = PublicKey.findProgramAddressSync(\n    [Buffer.from('open_orders'), serumMarket.toBuffer(), userTransferAuthority.toBuffer()],\n    JUPITER_PROGRAM_ID,\n  );\n\n  const ix = JUPITER_PROGRAM.instruction.createOpenOrders({\n    accounts: {\n      openOrders,\n      payer: userTransferAuthority,\n      dexProgram: serumProgramId,\n      systemProgram: SystemProgram.programId,\n      rent: SYSVAR_RENT_PUBKEY,\n      market: serumMarket,\n    },\n  });\n\n  return [openOrders, ix];\n}\n\nexport async function getOrCreateOpenOrdersAddress(\n  connection: Connection,\n  user: PublicKey,\n  serumMarket: PublicKey,\n  serumProgramId: PublicKey,\n): Promise<(Instruction & { address: PublicKey }) | undefined> {\n  const result = getEmptyInstruction();\n\n  const [newOpenOrdersAddress, ix] = createOpenOrdersInstruction(serumMarket, serumProgramId, user);\n\n  const newOpenOrdersAddressInfo = await connection.getAccountInfo(newOpenOrdersAddress);\n\n  if (!newOpenOrdersAddressInfo) {\n    result.setupInstructions = [ix];\n  }\n\n  return {\n    ...result,\n    address: newOpenOrdersAddress,\n  };\n}\n\nexport async function getAtaInstructions({\n  connection,\n  outputMints,\n  owner,\n  unwrapSOL,\n}: {\n  connection: Connection;\n  outputMints: PublicKey[];\n  owner: Owner;\n  unwrapSOL: boolean;\n}) {\n  const userTokenAccountResults = await Promise.all(\n    outputMints.map((outputMint) =>\n      findOrCreateAssociatedAccountByMint({\n        connection,\n        payer: owner.publicKey,\n        owner,\n        mintAddress: outputMint,\n        unwrapSOL,\n      }),\n    ),\n  );\n\n  const [userDestinationTokenAccountResult] = userTokenAccountResults.splice(userTokenAccountResults.length - 1, 1);\n\n  return {\n    userIntermediaryTokenAccountResults: userTokenAccountResults,\n    userDestinationTokenAccountResult,\n  };\n}\n","import { FeeCalculator } from '@solana/web3.js';\nimport { SetupInstructions, TransactionFeeInfo } from './types';\n\nconst SERUM_OPEN_ACCOUNT_LAMPORTS = 23_352_760;\nconst OPEN_TOKEN_ACCOUNT_LAMPORTS = 2_039_280;\nconst WALLET_RENT_EXEMPT_MINIMUM = 890_880;\nconst LAMPORTS_PER_SIGNATURE = 5000;\n\nfunction sum(values: number[]) {\n  return values.reduce((value, acc) => {\n    acc += value;\n    return acc;\n  }, 0);\n}\n\nexport const calculateTransactionDepositAndFee = ({\n  intermediates,\n  destination,\n  openOrders,\n  hasWrapUnwrapSOL,\n  feeCalculator,\n}: SetupInstructions & {\n  hasWrapUnwrapSOL: boolean;\n  feeCalculator: FeeCalculator;\n}): TransactionFeeInfo => {\n  const openOrdersDeposits = openOrders\n    .filter((ooi) => ooi && ooi.setupInstructions.length > 0)\n    .map(() => SERUM_OPEN_ACCOUNT_LAMPORTS);\n  const ataDeposits = [...intermediates, destination]\n    .filter((item) => item?.setupInstructions.length && item.cleanupInstructions.length === 0)\n    .map(() => OPEN_TOKEN_ACCOUNT_LAMPORTS);\n\n  const signatureFee = feeCalculator.lamportsPerSignature;\n\n  const totalFeeAndDeposits = sum([signatureFee, ...openOrdersDeposits, ...ataDeposits]);\n\n  // We need to account for temporary wrapped SOL token accounts as intermediary or output\n  const minimumSOLForTransaction = sum([\n    signatureFee,\n    ...openOrdersDeposits,\n    ...ataDeposits,\n    WALLET_RENT_EXEMPT_MINIMUM,\n    hasWrapUnwrapSOL ? OPEN_TOKEN_ACCOUNT_LAMPORTS : 0,\n  ]);\n\n  return {\n    signatureFee,\n    openOrdersDeposits,\n    ataDeposits,\n    totalFeeAndDeposits,\n    minimumSOLForTransaction,\n  };\n};\n\ninterface CalculateTransactionFeeAndDepositParams {\n  numOfAtasToBeCreated: number; // missing ata for each tokens\n  numOfOpenOrdersToBeCreated: number; // missing open orders for each tokens\n}\n\nexport const calculateTransactionDepositAndFeeV2 = ({\n  numOfAtasToBeCreated,\n  numOfOpenOrdersToBeCreated,\n}: CalculateTransactionFeeAndDepositParams): TransactionFeeInfo => {\n  const openOrdersDeposits = new Array(numOfOpenOrdersToBeCreated).fill(0).map(() => SERUM_OPEN_ACCOUNT_LAMPORTS);\n  const ataDeposits = new Array(numOfAtasToBeCreated).fill(0).map(() => OPEN_TOKEN_ACCOUNT_LAMPORTS);\n\n  const signatureFee = LAMPORTS_PER_SIGNATURE;\n\n  const totalFeeAndDeposits = sum([signatureFee, ...openOrdersDeposits, ...ataDeposits]);\n\n  // We need to account for temporary wrapped SOL token accounts as intermediary or output\n  const minimumSOLForTransaction = sum([\n    signatureFee,\n    ...openOrdersDeposits,\n    ...ataDeposits,\n    WALLET_RENT_EXEMPT_MINIMUM,\n  ]);\n\n  return {\n    signatureFee,\n    openOrdersDeposits,\n    ataDeposits,\n    totalFeeAndDeposits,\n    minimumSOLForTransaction,\n  };\n};\n"],"mappings":"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","names":["TransactionError","TransactionError","mintToIndexMap","indexedRouteMap","deserializeAccount","TOKEN_PROGRAM_ID","PublicKey","TransactionInstruction","TOKEN_PROGRAM_ID","PublicKey","deserializeAccount","TransactionInstruction","SwapMode","PublicKey","SystemProgram","PublicKey","SystemProgram","LAMPORTS_PER_SIGNATURE"]}